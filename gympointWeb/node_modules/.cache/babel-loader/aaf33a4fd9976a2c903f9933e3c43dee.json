{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Matriculations/form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Select from 'react-select';\nimport Async, { makeAsyncSelect } from 'react-select/async';\nimport { format, parseISO, addMonths } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport { request } from \"../../store/modules/data/actions\";\nimport history from \"../../services/history\";\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        students = _useState2[0],\n        setStudents = _useState2[1];\n\n  console.tron.log(students);\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        matriculation = _useState4[0],\n        setMatriculation = _useState4[1];\n\n  const active = matriculation.active,\n        studentId = matriculation.studentId,\n        planId = matriculation.planId,\n        price = matriculation.price,\n        studentName = matriculation.studentName,\n        planTitle = matriculation.planTitle,\n        planDuration = matriculation.planDuration,\n        start_dateFormated = matriculation.start_dateFormated,\n        end_dateFormated = matriculation.end_dateFormated;\n  console.tron.log(matriculation);\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        plans = _useState6[0],\n        setPlans = _useState6[1];\n\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n  useEffect(() => {\n    async function studentsData() {\n      const response = await api.get(`students`);\n      setStudents(response.data);\n    }\n\n    studentsData();\n\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n\n    plansData();\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n      const formatStartDate = format(parseISO(response.data.start_date), 'yyyy-MM-dd', {\n        locale: pt\n      });\n      const formatEndDate = format(parseISO(response.data.end_date), 'yyyy-MM-dd', {\n        locale: pt\n      });\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        studentName: response.data.students.name,\n        planId: response.data.plan_id,\n        planDuration: response.data.plans.duration,\n        planTitle: response.data.plans.title,\n        price: response.data.price,\n        start_dateFormated: formatStartDate,\n        end_dateFormated: formatEndDate\n      };\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function formatEndDate(refDate, planDuration) {\n    return format(addMonths(new Date(refDate), planDuration), 'yyyy-MM-dd');\n  }\n\n  function handleEvent(planValue, start_dateFormated) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      studentName,\n      planId: planValue.id,\n      planDuration: planValue.duration,\n      planTitle: planValue.title,\n      price: planValue.price * planValue.duration,\n      start_dateFormated,\n      end_dateFormated: formatEndDate(start_dateFormated, planValue.duration)\n    });\n  }\n\n  function handleSubmit(formData) {\n    const studentId = formData.studentId,\n          planId = formData.planId,\n          start_dateFormated = formData.start_dateFormated;\n    const action = matriculationId ? request('UPDATE', 'matriculations', {\n      id: studentId,\n      rest: {\n        plan_id: planId,\n        start_date: start_dateFormated\n      }\n    }) : request('CREATE', 'matriculations', {\n      student_id: studentId,\n      plan_id: planId,\n      start_date: start_dateFormated\n    });\n    dispatch(action);\n  }\n\n  const filterColors = inputValue => {\n    return students.filter(i => i.label.toLowerCase().includes(inputValue.toLowerCase()));\n  };\n\n  const promiseOptions = inputValue => new Promise(resolve => {\n    setTimeout(() => {\n      resolve(filterColors(inputValue));\n    }, 1000);\n  });\n\n  const MyComponent = () => React.createElement(Select, {\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  });\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Cadastro de matr\\xEDcula\"), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"greyButton\",\n    onClick: () => goTo('matriculations'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(MdArrowBack, {\n    size: 16,\n    color: \"#ee4d64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), \" VOLTAR\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSubmit(matriculation),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(MdCheck, {\n    size: 16,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), \" SALVAR\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"NOME DO ALUNO\"), React.createElement(AsyncSelect, {\n    cacheOptions: true,\n    defaultOptions: true,\n    loadOptions: promiseOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    disabled: matriculationId === '' ? '' : 'disabled',\n    value: studentName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"PLANO\"), React.createElement(\"select\", {\n    name: \"plans\",\n    onChange: event => handleEvent(JSON.parse(event.target.value), start_dateFormated),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, plans.map(plan => React.createElement(\"option\", {\n    selected: matriculation.planId === plan.id ? 'selected' : '',\n    value: `{\"id\":${plan.id}, \"title\":\"${plan.title}\", \"price\":${plan.price}, \"duration\":${plan.duration}}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, `${plan.title} (R$${plan.price},00 / ${plan.duration} ${plan.duration > 1 ? 'meses' : 'mÃªs'})`)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"DATA DE IN\\xCDCIO\"), React.createElement(\"input\", {\n    type: \"date\",\n    value: start_dateFormated,\n    name: \"startDateInput\",\n    onChange: event => setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      planId,\n      planDuration,\n      price,\n      studentName,\n      planTitle,\n      start_dateFormated: event.target.value,\n      end_dateFormated: formatEndDate(event.target.value, planDuration)\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"DATA DE T\\xC9RMINO\"), React.createElement(\"input\", {\n    type: \"date\",\n    disabled: true,\n    name: \"\",\n    id: \"\",\n    value: end_dateFormated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"VALOR TOTAL\"), React.createElement(\"input\", {\n    disabled: \"disabled\",\n    value: price,\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Matriculations/form.js"],"names":["React","useState","useEffect","useDispatch","Select","Async","makeAsyncSelect","format","parseISO","addMonths","utcToZonedTime","pt","MdArrowBack","MdCheck","api","request","history","Dashboard","dispatch","students","setStudents","console","tron","log","matriculation","setMatriculation","active","studentId","planId","price","studentName","planTitle","planDuration","start_dateFormated","end_dateFormated","plans","setPlans","params","URL","document","location","searchParams","matriculationId","get","studentsData","response","data","plansData","matriculationData","formatStartDate","start_date","locale","formatEndDate","end_date","id","student_id","name","plan_id","duration","title","goTo","page","push","refDate","Date","handleEvent","planValue","handleSubmit","formData","action","rest","filterColors","inputValue","filter","i","label","toLowerCase","includes","promiseOptions","Promise","resolve","setTimeout","MyComponent","options","event","JSON","parse","target","value","map","plan"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Select from 'react-select';\nimport Async, { makeAsyncSelect } from 'react-select/async';\n\nimport { format, parseISO, addMonths } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\n\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\n\nimport api from '~/services/api';\n\nimport { request } from '~/store/modules/data/actions';\n\nimport history from '~/services/history';\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const [students, setStudents] = useState([]);\n  console.tron.log(students);\n\n  const [matriculation, setMatriculation] = useState([]);\n  const {\n    active,\n    studentId,\n    planId,\n    price,\n    studentName,\n    planTitle,\n    planDuration,\n    start_dateFormated,\n    end_dateFormated,\n  } = matriculation;\n  console.tron.log(matriculation);\n\n  const [plans, setPlans] = useState([]);\n\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n\n  useEffect(() => {\n    async function studentsData() {\n      const response = await api.get(`students`);\n      setStudents(response.data);\n    }\n    studentsData();\n\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n    plansData();\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n\n      const formatStartDate = format(\n        parseISO(response.data.start_date),\n        'yyyy-MM-dd',\n        {\n          locale: pt,\n        }\n      );\n      const formatEndDate = format(\n        parseISO(response.data.end_date),\n        'yyyy-MM-dd',\n        {\n          locale: pt,\n        }\n      );\n\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        studentName: response.data.students.name,\n        planId: response.data.plan_id,\n        planDuration: response.data.plans.duration,\n        planTitle: response.data.plans.title,\n        price: response.data.price,\n        start_dateFormated: formatStartDate,\n        end_dateFormated: formatEndDate,\n      };\n\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function formatEndDate(refDate, planDuration) {\n    return format(addMonths(new Date(refDate), planDuration), 'yyyy-MM-dd');\n  }\n\n  function handleEvent(planValue, start_dateFormated) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      studentName,\n      planId: planValue.id,\n      planDuration: planValue.duration,\n      planTitle: planValue.title,\n      price: planValue.price * planValue.duration,\n      start_dateFormated,\n      end_dateFormated: formatEndDate(start_dateFormated, planValue.duration),\n    });\n  }\n\n  function handleSubmit(formData) {\n    const { studentId, planId, start_dateFormated } = formData;\n    const action = matriculationId\n      ? request('UPDATE', 'matriculations', {\n        id: studentId,\n        rest: { plan_id: planId, start_date: start_dateFormated },\n      })\n      : request('CREATE', 'matriculations', {\n        student_id: studentId,\n        plan_id: planId,\n        start_date: start_dateFormated,\n      });\n    dispatch(action);\n  }\n\n\n  const filterColors = (inputValue: string) => {\n    return students.filter(i =>\n      i.label.toLowerCase().includes(inputValue.toLowerCase())\n    );\n  };\n\n  const promiseOptions = inputValue =>\n    new Promise(resolve => {\n      setTimeout(() => {\n        resolve(filterColors(inputValue));\n      }, 1000);\n    });\n\n  const MyComponent = () => <Select options={options} />;\n\n  return (\n    <>\n      <header>\n        <h1>Cadastro de matrÃ­cula</h1>\n        <aside>\n          <button\n            type='button'\n            className='greyButton'\n            onClick={() => goTo('matriculations')}\n          >\n            <MdArrowBack size={16} color='#ee4d64' /> VOLTAR\n          </button>\n          <button type='button' onClick={() => handleSubmit(matriculation)}>\n            <MdCheck size={16} color='#fff' /> SALVAR\n          </button>\n        </aside>\n      </header>\n      <div>\n        <form>\n          <label htmlFor='name'>NOME DO ALUNO</label>\n          <AsyncSelect cacheOptions defaultOptions loadOptions={promiseOptions} />\n          <input\n            type='text'\n            name='name'\n            id='name'\n            disabled={matriculationId === '' ? '' : 'disabled'}\n            value={studentName}\n          />\n          <div>\n            <div>\n              <label htmlFor='name'>PLANO</label>\n              <select\n                name='plans'\n                onChange={event =>\n                  handleEvent(\n                    JSON.parse(event.target.value),\n                    start_dateFormated\n                  )\n                }\n              >\n                {plans.map(plan => (\n                  <option\n                    selected={\n                      matriculation.planId === plan.id ? 'selected' : ''\n                    }\n                    value={`{\"id\":${plan.id}, \"title\":\"${plan.title}\", \"price\":${plan.price}, \"duration\":${plan.duration}}`}\n                  >\n                    {`${plan.title} (R$${plan.price},00 / ${plan.duration} ${\n                      plan.duration > 1 ? 'meses' : 'mÃªs'\n                      })`}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE INÃCIO</label>\n              <input\n                type='date'\n                value={start_dateFormated}\n                name='startDateInput'\n                onChange={event =>\n                  setMatriculation({\n                    active,\n                    matriculationId,\n                    studentId,\n                    planId,\n                    planDuration,\n                    price,\n                    studentName,\n                    planTitle,\n                    start_dateFormated: event.target.value,\n                    end_dateFormated: formatEndDate(\n                      event.target.value,\n                      planDuration\n                    ),\n                  })\n                }\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE TÃRMINO</label>\n              <input\n                type='date'\n                disabled\n                name=''\n                id=''\n                value={end_dateFormated}\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>VALOR TOTAL</label>\n              <input\n                disabled='disabled'\n                value={price}\n                type='text'\n                name=''\n                id=''\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}