{"ast":null,"code":"import { takeLatest, call, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from \"../../../services/api\";\nexport function* toCreate({\n  payload\n}) {\n  console.tron.log(payload);\n\n  try {\n    const page = payload.page,\n          data = payload.data;\n    yield call(api.post, page, data);\n    toast.success('Dados inseridos com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao inserir dados!');\n  }\n}\nexport function* toUpdate({\n  payload\n}) {\n  console.tron.log(payload);\n\n  try {\n    const page = payload.page,\n          data = payload.data;\n    const id = data.id,\n          formData = data.formData;\n    yield call(api.put, `/${page}/${id}`, formData);\n    toast.success('Dados atualizados com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao atualizar dados!');\n  }\n}\nexport function* toDelete({\n  payload\n}) {\n  try {\n    const page = payload.page,\n          data = payload.data;\n    yield call(api.delete, page, {\n      data: {\n        id: String(data)\n      }\n    });\n    toast.success('Dados deletados com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao deletar dados!');\n  }\n}\nexport default all([takeLatest('CREATE', toCreate), takeLatest('UPDATE', toUpdate), takeLatest('DELETE', toDelete)]);","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/store/modules/data/sagas.js"],"names":["takeLatest","call","all","toast","api","toCreate","payload","console","tron","log","page","data","post","success","err","error","toUpdate","id","formData","put","toDelete","delete","String"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAO,UAAUC,QAAV,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAgC;AACrCC,EAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBH,OAAjB;;AACA,MAAI;AAAA,UACMI,IADN,GACqBJ,OADrB,CACMI,IADN;AAAA,UACYC,IADZ,GACqBL,OADrB,CACYK,IADZ;AAEF,UAAMV,IAAI,CAACG,GAAG,CAACQ,IAAL,EAAWF,IAAX,EAAiBC,IAAjB,CAAV;AAEAR,IAAAA,KAAK,CAACU,OAAN,CAAc,8BAAd;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZX,IAAAA,KAAK,CAACY,KAAN,CAAY,wBAAZ;AACD;AACF;AAED,OAAO,UAAUC,QAAV,CAAmB;AAAEV,EAAAA;AAAF,CAAnB,EAAgC;AACrCC,EAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBH,OAAjB;;AACA,MAAI;AAAA,UACMI,IADN,GACqBJ,OADrB,CACMI,IADN;AAAA,UACYC,IADZ,GACqBL,OADrB,CACYK,IADZ;AAAA,UAEMM,EAFN,GAEuBN,IAFvB,CAEMM,EAFN;AAAA,UAEUC,QAFV,GAEuBP,IAFvB,CAEUO,QAFV;AAGF,UAAMjB,IAAI,CAACG,GAAG,CAACe,GAAL,EAAW,IAAGT,IAAK,IAAGO,EAAG,EAAzB,EAA4BC,QAA5B,CAAV;AAEAf,IAAAA,KAAK,CAACU,OAAN,CAAc,gCAAd;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZX,IAAAA,KAAK,CAACY,KAAN,CAAY,0BAAZ;AACD;AACF;AAED,OAAO,UAAUK,QAAV,CAAmB;AAAEd,EAAAA;AAAF,CAAnB,EAAgC;AACrC,MAAI;AAAA,UACMI,IADN,GACqBJ,OADrB,CACMI,IADN;AAAA,UACYC,IADZ,GACqBL,OADrB,CACYK,IADZ;AAEF,UAAMV,IAAI,CAACG,GAAG,CAACiB,MAAL,EAAaX,IAAb,EAAmB;AAAEC,MAAAA,IAAI,EAAE;AAAEM,QAAAA,EAAE,EAAEK,MAAM,CAACX,IAAD;AAAZ;AAAR,KAAnB,CAAV;AAEAR,IAAAA,KAAK,CAACU,OAAN,CAAc,8BAAd;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZX,IAAAA,KAAK,CAACY,KAAN,CAAY,wBAAZ;AACD;AACF;AAED,eAAeb,GAAG,CAAC,CACjBF,UAAU,CAAC,QAAD,EAAWK,QAAX,CADO,EAEjBL,UAAU,CAAC,QAAD,EAAWgB,QAAX,CAFO,EAGjBhB,UAAU,CAAC,QAAD,EAAWoB,QAAX,CAHO,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '~/services/api';\n\nexport function* toCreate({ payload }) {\n  console.tron.log(payload);\n  try {\n    const { page, data } = payload;\n    yield call(api.post, page, data);\n\n    toast.success('Dados inseridos com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao inserir dados!');\n  }\n}\n\nexport function* toUpdate({ payload }) {\n  console.tron.log(payload);\n  try {\n    const { page, data } = payload;\n    const { id, formData } = data;\n    yield call(api.put, `/${page}/${id}`, formData);\n\n    toast.success('Dados atualizados com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao atualizar dados!');\n  }\n}\n\nexport function* toDelete({ payload }) {\n  try {\n    const { page, data } = payload;\n    yield call(api.delete, page, { data: { id: String(data) } });\n\n    toast.success('Dados deletados com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao deletar dados!');\n  }\n}\n\nexport default all([\n  takeLatest('CREATE', toCreate),\n  takeLatest('UPDATE', toUpdate),\n  takeLatest('DELETE', toDelete),\n]);\n"]},"metadata":{},"sourceType":"module"}