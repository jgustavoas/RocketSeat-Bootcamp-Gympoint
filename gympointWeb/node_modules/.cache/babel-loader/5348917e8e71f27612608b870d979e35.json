{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Matriculations/form.js\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format, parseISO, addMonths } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport { request } from \"../../store/modules/data/actions\";\nimport history from \"../../services/history\";\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        matriculation = _useState2[0],\n        setMatriculation = _useState2[1];\n\n  const active = matriculation.active,\n        studentId = matriculation.studentId,\n        planId = matriculation.planId,\n        price = matriculation.price,\n        studentName = matriculation.studentName,\n        planTitle = matriculation.planTitle,\n        planDuration = matriculation.planDuration,\n        start_date = matriculation.start_date,\n        start_dateFormated = matriculation.start_dateFormated,\n        end_dateFormated = matriculation.end_dateFormated,\n        newEndDate = matriculation.newEndDate;\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        plans = _useState4[0],\n        setPlans = _useState4[1];\n\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n  useEffect(() => {\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n\n    setMatriculation(plansData);\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n      const formatStartDate = format(parseISO(response.data.start_date), 'yyyy-MM-dd', {\n        locale: pt\n      });\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        planId: response.data.plan_id,\n        price: response.data.price,\n        studentName: response.data.students.name,\n        planTitle: response.data.plans.title,\n        planDuration: response.data.plans.duration,\n        start_date: response.data.start_date,\n        start_dateFormated: formatStartDate,\n        end_date: response.data.end_date,\n        end_dateFormated: format(parseISO(response.data.end_date), 'dd/MM/yyyy', {\n          locale: pt\n        })\n      };\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function formatEndDate(refDate, planDuration) {\n    return format(addMonths(new Date(refDate), planDuration), 'dd/MM/yyyy');\n  }\n\n  function handleEvent(planValue, start_dateFormated) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      studentName,\n      planId: planValue.id,\n      planDuration: planValue.duration,\n      planTitle: planValue.title,\n      price: planValue.price * planValue.duration,\n      start_dateFormated,\n      start_date,\n      newEndDate: formatEndDate(start_dateFormated, planValue.duration)\n    });\n  }\n\n  function handleSubmit(formData) {\n    const plan_id = formData.plan_id,\n          start_date = formData.start_date,\n          end_date = formData.end_date;\n    const action = matriculationId ? request('UPDATE', 'matriculations', formData) : request('CREATE', 'matriculations', {\n      plan_id,\n      start_date,\n      end_date\n    });\n    dispatch(action);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Cadastro de matr\\xEDcula\"), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"greyButton\",\n    onClick: () => goTo('matriculations'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(MdArrowBack, {\n    size: 16,\n    color: \"#ee4d64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), \" VOLTAR\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSubmit(matriculation),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(MdCheck, {\n    size: 16,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), \" SALVAR\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"NOME DO ALUNO\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    disabled: matriculationId === '' ? '' : 'disabled',\n    value: studentName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"PLANO\"), React.createElement(\"select\", {\n    name: \"plans\",\n    onChange: event => handleEvent(JSON.parse(event.target.value), start_dateFormated),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, plans.map(plan => React.createElement(\"option\", {\n    selected: matriculation.planId === plan.id ? 'selected' : '',\n    value: `{\"id\":${plan.id}, \"title\":\"${plan.title}\", \"price\":${plan.price}, \"duration\":${plan.duration}}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, `${plan.title} (R$${plan.price},00 / ${plan.duration} ${plan.duration > 1 ? 'meses' : 'mÃªs'})`)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"DATA DE IN\\xCDCIO\"), React.createElement(\"input\", {\n    type: \"date\",\n    value: start_dateFormated,\n    name: \"startDateInput\",\n    onChange: event => setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      planId,\n      planDuration,\n      price,\n      studentName,\n      planTitle,\n      start_dateFormated: event.target.value,\n      start_date,\n      newEndDate: formatEndDate(event.target.value, planDuration)\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"DATA DE T\\xC9RMINO\"), React.createElement(\"input\", {\n    type: \"text\",\n    disabled: \"disabled\",\n    name: \"\",\n    id: \"\",\n    value: !newEndDate ? end_dateFormated : newEndDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"VALOR TOTAL\"), React.createElement(\"input\", {\n    disabled: \"disabled\",\n    value: price,\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Matriculations/form.js"],"names":["React","useState","useMemo","useEffect","useDispatch","format","parseISO","addMonths","utcToZonedTime","pt","MdArrowBack","MdCheck","api","request","history","Dashboard","dispatch","matriculation","setMatriculation","active","studentId","planId","price","studentName","planTitle","planDuration","start_date","start_dateFormated","end_dateFormated","newEndDate","plans","setPlans","params","URL","document","location","searchParams","matriculationId","get","plansData","response","data","matriculationData","formatStartDate","locale","id","student_id","plan_id","students","name","title","duration","end_date","goTo","page","push","formatEndDate","refDate","Date","handleEvent","planValue","handleSubmit","formData","action","event","JSON","parse","target","value","map","plan"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format, parseISO, addMonths } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from '~/services/api';\n\nimport { request } from '~/store/modules/data/actions';\n\nimport history from '~/services/history';\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const [matriculation, setMatriculation] = useState([]);\n  const {\n    active,\n    studentId,\n    planId,\n    price,\n    studentName,\n    planTitle,\n    planDuration,\n    start_date,\n    start_dateFormated,\n    end_dateFormated,\n    newEndDate,\n  } = matriculation;\n\n  const [plans, setPlans] = useState([]);\n\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n\n  useEffect(() => {\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n    setMatriculation(plansData);\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n\n      const formatStartDate = format(\n        parseISO(response.data.start_date),\n        'yyyy-MM-dd',\n        {\n          locale: pt,\n        }\n      );\n\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        planId: response.data.plan_id,\n        price: response.data.price,\n        studentName: response.data.students.name,\n        planTitle: response.data.plans.title,\n        planDuration: response.data.plans.duration,\n        start_date: response.data.start_date,\n        start_dateFormated: formatStartDate,\n        end_date: response.data.end_date,\n        end_dateFormated: format(\n          parseISO(response.data.end_date),\n          'dd/MM/yyyy',\n          {\n            locale: pt,\n          }\n        ),\n      };\n\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function formatEndDate(refDate, planDuration) {\n    return format(addMonths(new Date(refDate), planDuration), 'dd/MM/yyyy');\n  }\n\n  function handleEvent(planValue, start_dateFormated) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      studentName,\n      planId: planValue.id,\n      planDuration: planValue.duration,\n      planTitle: planValue.title,\n      price: planValue.price * planValue.duration,\n      start_dateFormated,\n      start_date,\n      newEndDate: formatEndDate(start_dateFormated, planValue.duration),\n    });\n  }\n\n  function handleSubmit(formData) {\n    const { plan_id, start_date, end_date } = formData;\n    const action = matriculationId\n      ? request('UPDATE', 'matriculations', formData)\n      : request('CREATE', 'matriculations', { plan_id, start_date, end_date });\n    dispatch(action);\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Cadastro de matrÃ­cula</h1>\n        <aside>\n          <button\n            type='button'\n            className='greyButton'\n            onClick={() => goTo('matriculations')}\n          >\n            <MdArrowBack size={16} color='#ee4d64' /> VOLTAR\n          </button>\n          <button type='button' onClick={() => handleSubmit(matriculation)}>\n            <MdCheck size={16} color='#fff' /> SALVAR\n          </button>\n        </aside>\n      </header>\n      <div>\n        <form>\n          <label htmlFor='name'>NOME DO ALUNO</label>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            disabled={matriculationId === '' ? '' : 'disabled'}\n            value={studentName}\n          />\n          <div>\n            <div>\n              <label htmlFor='name'>PLANO</label>\n              <select\n                name='plans'\n                onChange={event =>\n                  handleEvent(\n                    JSON.parse(event.target.value),\n                    start_dateFormated\n                  )\n                }\n              >\n                {plans.map(plan => (\n                  <option\n                    selected={\n                      matriculation.planId === plan.id ? 'selected' : ''\n                    }\n                    value={`{\"id\":${plan.id}, \"title\":\"${plan.title}\", \"price\":${plan.price}, \"duration\":${plan.duration}}`}\n                  >\n                    {`${plan.title} (R$${plan.price},00 / ${plan.duration} ${\n                      plan.duration > 1 ? 'meses' : 'mÃªs'\n                    })`}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE INÃCIO</label>\n              <input\n                type='date'\n                value={start_dateFormated}\n                name='startDateInput'\n                onChange={event =>\n                  setMatriculation({\n                    active,\n                    matriculationId,\n                    studentId,\n                    planId,\n                    planDuration,\n                    price,\n                    studentName,\n                    planTitle,\n                    start_dateFormated: event.target.value,\n                    start_date,\n                    newEndDate: formatEndDate(event.target.value, planDuration),\n                  })\n                }\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE TÃRMINO</label>\n              <input\n                type='text'\n                disabled='disabled'\n                name=''\n                id=''\n                value={!newEndDate ? end_dateFormated : newEndDate}\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>VALOR TOTAL</label>\n              <input\n                disabled='disabled'\n                value={price}\n                type='text'\n                name=''\n                id=''\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}