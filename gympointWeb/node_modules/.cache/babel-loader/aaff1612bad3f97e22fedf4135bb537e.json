{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/Documentos/RocketSeat/Bootcamp/Desafios/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Documentos/RocketSeat/Bootcamp/Desafios/gympointWeb/src/pages/Students/form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input } from '@rocketseat/unform';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport history from \"../../services/history\";\nexport default function StudentsForm() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        student = _useState2[0],\n        setStudent = _useState2[1];\n\n  const id = student.id,\n        name = student.name,\n        email = student.email,\n        age = student.age,\n        weight = student.weight,\n        height = student.height;\n  console.tron.log(student);\n  const params = new URL(document.location).searchParams;\n  const studentId = params.get('id') ? params.get('id') : '';\n  useEffect(() => {\n    async function studentData() {\n      const response = await api.get(\"students/\".concat(studentId));\n      setStudent(response.data);\n    }\n\n    studentData();\n  }, [studentId]);\n\n  function updateStudent(id, name, email) {\n    setStudent({\n      id,\n      name,\n      email\n    });\n  }\n\n  async function updateSubmit(id, studentUpdate) {\n    await api.put(\"students/\".concat(id), {\n      studentUpdate\n    });\n  }\n\n  function goTo(page) {\n    history.push(\"/\".concat(page));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Cadastro de aluno\"), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"greyButton\",\n    onClick: () => goTo('students'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(MdArrowBack, {\n    size: 16,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \" VOLTAR\"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(MdCheck, {\n    size: 16,\n    color: \"#fff\",\n    onClick: () => updateSubmit(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), ' ', \"SALVAR\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"NOME COMPLETO\", React.createElement(Input, {\n    type: \"text\",\n    onChange: event => setStudent({\n      id,\n      name: event.target.value,\n      age,\n      weight,\n      height\n    }),\n    value: name,\n    name: \"name\",\n    id: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"E-MAIL\", React.createElement(Input, {\n    type: \"email\",\n    value: email,\n    name: \"email\",\n    id: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"IDADE\", React.createElement(Input, {\n    type: \"text\",\n    value: age,\n    name: \"age\",\n    id: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"PESO\", React.createElement(Input, {\n    type: \"text\",\n    value: weight,\n    name: \"weight\",\n    id: \"weght\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"ALTURA\", React.createElement(Input, {\n    type: \"text\",\n    value: height,\n    name: \"height\",\n    id: \"height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })))))));\n}","map":{"version":3,"sources":["/home/gustavo/Documentos/RocketSeat/Bootcamp/Desafios/gympointWeb/src/pages/Students/form.js"],"names":["React","useState","useEffect","Form","Input","MdArrowBack","MdCheck","api","history","StudentsForm","student","setStudent","id","name","email","age","weight","height","console","tron","log","params","URL","document","location","searchParams","studentId","get","studentData","response","data","updateStudent","updateSubmit","studentUpdate","put","goTo","page","push","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Input } from '@rocketseat/unform';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from '~/services/api';\n\nimport history from '~/services/history';\n\nexport default function StudentsForm() {\n  const [student, setStudent] = useState([]);\n  const { id, name, email, age, weight, height } = student;\n\n  console.tron.log(student);\n\n  const params = new URL(document.location).searchParams;\n  const studentId = params.get('id') ? params.get('id') : '';\n\n  useEffect(() => {\n    async function studentData() {\n      const response = await api.get(`students/${studentId}`);\n\n      setStudent(response.data);\n    }\n\n    studentData();\n  }, [studentId]);\n\n  function updateStudent(id, name, email) {\n    setStudent({ id, name, email });\n  }\n\n  async function updateSubmit(id, studentUpdate) {\n    await api.put(`students/${id}`, { studentUpdate });\n  }\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Cadastro de aluno</h1>\n        <aside>\n          <button\n            type='button'\n            className='greyButton'\n            onClick={() => goTo('students')}\n          >\n            <MdArrowBack size={16} color='#fff' /> VOLTAR\n          </button>\n          <button type='button'>\n            <MdCheck size={16} color='#fff' onClick={() => updateSubmit(id)} />{' '}\n            SALVAR\n          </button>\n        </aside>\n      </header>\n      <div>\n        <form>\n          <label htmlFor='name'>\n            NOME COMPLETO\n            <Input\n              type='text'\n              onChange={event =>\n                setStudent({\n                  id,\n                  name: event.target.value,\n                  age,\n                  weight,\n                  height,\n                })\n              }\n              value={name}\n              name='name'\n              id='name'\n            />\n          </label>\n          <label htmlFor='email'>\n            E-MAIL\n            <Input type='email' value={email} name='email' id='email' />\n          </label>\n          <div>\n            <div>\n              <label htmlFor='age'>\n                IDADE\n                <Input type='text' value={age} name='age' id='age' />\n              </label>\n            </div>\n            <div>\n              <label htmlFor='weight'>\n                PESO\n                <Input type='text' value={weight} name='weight' id='weght' />\n              </label>\n            </div>\n            <div>\n              <label htmlFor='height'>\n                ALTURA\n                <Input type='text' value={height} name='height' id='height' />\n              </label>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}