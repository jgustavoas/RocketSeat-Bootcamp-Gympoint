{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from \"../../../services/api\"; // import { request } from './actions';\n\nexport function* toCreate({\n  payload\n}) {\n  console.tron.log(payload.data.student_id, payload.data.student_id, payload.data.start_date);\n\n  try {\n    const _payload$data = payload.data,\n          page = _payload$data.page,\n          rest = _payload$data.rest;\n    yield call(api.post, page, rest);\n    toast.success('Aluno matriculado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao atualizar dados!'); // yield put(failure(payload.page, 'CREATE', payload.data));\n  }\n}\nexport function* toUpdate({\n  payload\n}) {\n  try {\n    const page = payload.page,\n          data = payload.data;\n    const id = data.id,\n          rest = data.rest;\n    yield call(api.put, `/${page}/${id}`, rest);\n    toast.success('Matrícula atualizada com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao editar matrcícula!');\n    console.tron.log(payload); // yield put(failure(payload.page, 'UPDATE', payload.data));\n  }\n}\nexport function* toDelete({\n  payload\n}) {\n  console.tron.log(payload);\n\n  try {\n    const page = payload.page,\n          data = payload.data;\n    yield call(api.delete, page, {\n      data: {\n        id: String(data)\n      }\n    });\n    toast.success('Matrícula deletada com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao deletar matrícula!');\n  }\n}\nexport default all([takeLatest('CREATE', toCreate), takeLatest('UPDATE', toUpdate), takeLatest('DELETE', toDelete)]);","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/store/modules/data/sagas.js"],"names":["takeLatest","call","put","all","toast","api","toCreate","payload","console","tron","log","data","student_id","start_date","page","rest","post","success","err","error","toUpdate","id","toDelete","delete","String"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CAEA;;AAEA,OAAO,UAAUC,QAAV,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAgC;AACrCC,EAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CACEH,OAAO,CAACI,IAAR,CAAaC,UADf,EAEEL,OAAO,CAACI,IAAR,CAAaC,UAFf,EAGEL,OAAO,CAACI,IAAR,CAAaE,UAHf;;AAKA,MAAI;AAAA,0BACqBN,OAAO,CAACI,IAD7B;AAAA,UACMG,IADN,iBACMA,IADN;AAAA,UACYC,IADZ,iBACYA,IADZ;AAEF,UAAMd,IAAI,CAACI,GAAG,CAACW,IAAL,EAAWF,IAAX,EAAiBC,IAAjB,CAAV;AAEAX,IAAAA,KAAK,CAACa,OAAN,CAAc,gCAAd;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZd,IAAAA,KAAK,CAACe,KAAN,CAAY,0BAAZ,EADY,CAEZ;AACD;AACF;AAED,OAAO,UAAUC,QAAV,CAAmB;AAAEb,EAAAA;AAAF,CAAnB,EAAgC;AACrC,MAAI;AAAA,UACMO,IADN,GACqBP,OADrB,CACMO,IADN;AAAA,UACYH,IADZ,GACqBJ,OADrB,CACYI,IADZ;AAAA,UAEMU,EAFN,GAEmBV,IAFnB,CAEMU,EAFN;AAAA,UAEUN,IAFV,GAEmBJ,IAFnB,CAEUI,IAFV;AAGF,UAAMd,IAAI,CAACI,GAAG,CAACH,GAAL,EAAW,IAAGY,IAAK,IAAGO,EAAG,EAAzB,EAA4BN,IAA5B,CAAV;AAEAX,IAAAA,KAAK,CAACa,OAAN,CAAc,mCAAd;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZd,IAAAA,KAAK,CAACe,KAAN,CAAY,4BAAZ;AACAX,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBH,OAAjB,EAFY,CAGZ;AACD;AACF;AAED,OAAO,UAAUe,QAAV,CAAmB;AAAEf,EAAAA;AAAF,CAAnB,EAAgC;AACrCC,EAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBH,OAAjB;;AACA,MAAI;AAAA,UACMO,IADN,GACqBP,OADrB,CACMO,IADN;AAAA,UACYH,IADZ,GACqBJ,OADrB,CACYI,IADZ;AAEF,UAAMV,IAAI,CAACI,GAAG,CAACkB,MAAL,EAAaT,IAAb,EAAmB;AAAEH,MAAAA,IAAI,EAAE;AAAEU,QAAAA,EAAE,EAAEG,MAAM,CAACb,IAAD;AAAZ;AAAR,KAAnB,CAAV;AAEAP,IAAAA,KAAK,CAACa,OAAN,CAAc,iCAAd;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZd,IAAAA,KAAK,CAACe,KAAN,CAAY,4BAAZ;AACD;AACF;AAED,eAAehB,GAAG,CAAC,CACjBH,UAAU,CAAC,QAAD,EAAWM,QAAX,CADO,EAEjBN,UAAU,CAAC,QAAD,EAAWoB,QAAX,CAFO,EAGjBpB,UAAU,CAAC,QAAD,EAAWsB,QAAX,CAHO,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '~/services/api';\n\n// import { request } from './actions';\n\nexport function* toCreate({ payload }) {\n  console.tron.log(\n    payload.data.student_id,\n    payload.data.student_id,\n    payload.data.start_date\n  );\n  try {\n    const { page, rest } = payload.data;\n    yield call(api.post, page, rest);\n\n    toast.success('Aluno matriculado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao atualizar dados!');\n    // yield put(failure(payload.page, 'CREATE', payload.data));\n  }\n}\n\nexport function* toUpdate({ payload }) {\n  try {\n    const { page, data } = payload;\n    const { id, rest } = data;\n    yield call(api.put, `/${page}/${id}`, rest);\n\n    toast.success('Matrícula atualizada com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao editar matrcícula!');\n    console.tron.log(payload);\n    // yield put(failure(payload.page, 'UPDATE', payload.data));\n  }\n}\n\nexport function* toDelete({ payload }) {\n  console.tron.log(payload);\n  try {\n    const { page, data } = payload;\n    yield call(api.delete, page, { data: { id: String(data) } });\n\n    toast.success('Matrícula deletada com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao deletar matrícula!');\n  }\n}\n\nexport default all([\n  takeLatest('CREATE', toCreate),\n  takeLatest('UPDATE', toUpdate),\n  takeLatest('DELETE', toDelete),\n]);\n"]},"metadata":{},"sourceType":"module"}