{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/src/pages/Matriculations/form.js\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format, parseISO, addMonths, getDay, getDate, getMonth, getYear } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport { request } from \"../../store/modules/data/actions\";\nimport history from \"../../services/history\";\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        matriculation = _useState2[0],\n        setMatriculation = _useState2[1];\n\n  const active = matriculation.active,\n        studentId = matriculation.studentId,\n        planId = matriculation.planId,\n        price = matriculation.price,\n        studentName = matriculation.studentName,\n        planTitle = matriculation.planTitle,\n        start_date = matriculation.start_date,\n        start_dateFormated = matriculation.start_dateFormated,\n        end_date = matriculation.end_date,\n        end_dateFormated = matriculation.end_dateFormated;\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        plans = _useState4[0],\n        setPlans = _useState4[1];\n\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n  useEffect(() => {\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n\n    setMatriculation(plansData);\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n      const formatStartDate = format(parseISO(response.data.start_date), 'yyyy-MM-dd', {\n        locale: pt\n      });\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        planId: response.data.plan_id,\n        price: response.data.price,\n        studentName: response.data.students.name,\n        planTitle: response.data.plans.title,\n        start_date: response.data.start_date,\n        start_dateFormated: formatStartDate,\n        end_date: response.data.end_date,\n        end_dateFormated: format(parseISO(response.data.end_date), 'dd/MM/yyyy', {\n          locale: pt\n        })\n      };\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function handleSubmit(formData) {\n    const plan_id = formData.plan_id,\n          start_date = formData.start_date,\n          end_date = formData.end_date;\n    const action = matriculationId ? request('UPDATE', 'matriculations', formData) : request('CREATE', 'matriculations', {\n      plan_id,\n      start_date,\n      end_date\n    });\n    dispatch(action);\n  }\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Cadastro de matr\\xEDcula\"), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"greyButton\",\n    onClick: () => goTo('matriculations'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(MdArrowBack, {\n    size: 16,\n    color: \"#ee4d64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), \" VOLTAR\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSubmit(matriculation),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(MdCheck, {\n    size: 16,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), \" SALVAR\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"NOME DO ALUNO\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    disabled: matriculationId === '' ? '' : 'disabled',\n    value: studentName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"PLANO\"), React.createElement(\"select\", {\n    name: \"cars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, plans.map(plan => React.createElement(\"option\", {\n    selected: matriculation.planId === plan.id ? 'selected' : '',\n    value: plan.id,\n    onSelect: event => setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      planId: event.target.value,\n      price,\n      studentName,\n      planTitle,\n      start_dateFormated\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, `${plan.title} (R$${plan.price},00 / ${plan.duration} ${plan.duration > 1 ? 'meses' : 'mÃªs'})`)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"DATA DE IN\\xCDCIO\"), React.createElement(\"input\", {\n    type: \"date\",\n    value: start_dateFormated,\n    name: \"startDateInput\",\n    onChange: event => setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      planId,\n      price,\n      studentName,\n      planTitle,\n      start_dateFormated: event.target.value,\n      start_date\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"DATA DE T\\xC9RMINO\"), React.createElement(\"input\", {\n    type: \"text\",\n    disabled: \"disabled\",\n    name: \"\",\n    id: \"\",\n    value: format(addMonths(new Date(String(start_dateFormated)), 3), 'dd/MM/yyyy'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"VALOR TOTAL\"), React.createElement(\"input\", {\n    disabled: \"disabled\",\n    value: price,\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/src/pages/Matriculations/form.js"],"names":["React","useState","useMemo","useEffect","useDispatch","format","parseISO","addMonths","getDay","getDate","getMonth","getYear","utcToZonedTime","pt","MdArrowBack","MdCheck","api","request","history","Dashboard","dispatch","matriculation","setMatriculation","active","studentId","planId","price","studentName","planTitle","start_date","start_dateFormated","end_date","end_dateFormated","plans","setPlans","params","URL","document","location","searchParams","matriculationId","get","plansData","response","data","matriculationData","formatStartDate","locale","id","student_id","plan_id","students","name","title","handleSubmit","formData","action","goTo","page","push","map","plan","event","target","value","duration","Date","String"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  format,\n  parseISO,\n  addMonths,\n  getDay,\n  getDate,\n  getMonth,\n  getYear,\n} from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from '~/services/api';\n\nimport { request } from '~/store/modules/data/actions';\n\nimport history from '~/services/history';\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const [matriculation, setMatriculation] = useState([]);\n  const {\n    active,\n    studentId,\n    planId,\n    price,\n    studentName,\n    planTitle,\n    start_date,\n    start_dateFormated,\n    end_date,\n    end_dateFormated,\n  } = matriculation;\n\n  const [plans, setPlans] = useState([]);\n\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n\n  useEffect(() => {\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n    setMatriculation(plansData);\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n\n      const formatStartDate = format(\n        parseISO(response.data.start_date),\n        'yyyy-MM-dd',\n        {\n          locale: pt,\n        }\n      );\n\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        planId: response.data.plan_id,\n        price: response.data.price,\n        studentName: response.data.students.name,\n        planTitle: response.data.plans.title,\n        start_date: response.data.start_date,\n        start_dateFormated: formatStartDate,\n        end_date: response.data.end_date,\n        end_dateFormated: format(\n          parseISO(response.data.end_date),\n          'dd/MM/yyyy',\n          {\n            locale: pt,\n          }\n        ),\n      };\n\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function handleSubmit(formData) {\n    const { plan_id, start_date, end_date } = formData;\n    const action = matriculationId\n      ? request('UPDATE', 'matriculations', formData)\n      : request('CREATE', 'matriculations', { plan_id, start_date, end_date });\n    dispatch(action);\n  }\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Cadastro de matrÃ­cula</h1>\n        <aside>\n          <button\n            type='button'\n            className='greyButton'\n            onClick={() => goTo('matriculations')}\n          >\n            <MdArrowBack size={16} color='#ee4d64' /> VOLTAR\n          </button>\n          <button type='button' onClick={() => handleSubmit(matriculation)}>\n            <MdCheck size={16} color='#fff' /> SALVAR\n          </button>\n        </aside>\n      </header>\n      <div>\n        <form>\n          <label htmlFor='name'>NOME DO ALUNO</label>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            disabled={matriculationId === '' ? '' : 'disabled'}\n            value={studentName}\n          />\n          <div>\n            <div>\n              <label htmlFor='name'>PLANO</label>\n              <select name='cars'>\n                {plans.map(plan => (\n                  <option\n                    selected={\n                      matriculation.planId === plan.id ? 'selected' : ''\n                    }\n                    value={plan.id}\n                    onSelect={event =>\n                      setMatriculation({\n                        active,\n                        matriculationId,\n                        studentId,\n                        planId: event.target.value,\n                        price,\n                        studentName,\n                        planTitle,\n                        start_dateFormated,\n                      })\n                    }\n                  >\n                    {`${plan.title} (R$${plan.price},00 / ${plan.duration} ${\n                      plan.duration > 1 ? 'meses' : 'mÃªs'\n                    })`}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE INÃCIO</label>\n              <input\n                type='date'\n                value={start_dateFormated}\n                name='startDateInput'\n                onChange={event =>\n                  setMatriculation({\n                    active,\n                    matriculationId,\n                    studentId,\n                    planId,\n                    price,\n                    studentName,\n                    planTitle,\n                    start_dateFormated: event.target.value,\n                    start_date,\n                  })\n                }\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE TÃRMINO</label>\n              <input\n                type='text'\n                disabled='disabled'\n                name=''\n                id=''\n                value={format(\n                  addMonths(new Date(String(start_dateFormated)), 3),\n                  'dd/MM/yyyy'\n                )}\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>VALOR TOTAL</label>\n              <input\n                disabled='disabled'\n                value={price}\n                type='text'\n                name=''\n                id=''\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}