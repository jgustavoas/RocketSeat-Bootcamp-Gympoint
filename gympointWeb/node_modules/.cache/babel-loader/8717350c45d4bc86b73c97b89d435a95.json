{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Students/form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input } from '@rocketseat/unform';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport { newStudentRequest, updateStudentRequest } from \"../../store/modules/student/actions\";\nimport { request } from \"../../store/modules/data/actions\";\nimport history from \"../../services/history\";\nexport default function StudentsForm() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        student = _useState2[0],\n        setStudent = _useState2[1];\n\n  const id = student.id,\n        name = student.name,\n        email = student.email,\n        age = student.age,\n        weight = student.weight,\n        height = student.height;\n  const params = new URL(document.location).searchParams;\n  const studentId = params.get('id') ? params.get('id') : '';\n  useEffect(() => {\n    async function studentData() {\n      const response = await api.get(`students/${studentId}`);\n      setStudent(response.data);\n    }\n\n    if (studentId !== '') {\n      studentData();\n    }\n  }, [studentId]);\n  /*\n  function handleSubmit(studentFormData) {\n    const { name, email, age, weight, height } = studentFormData;\n    const action = studentId\n      ? updateStudentRequest(studentFormData)\n      : newStudentRequest({ name, email, age, weight, height });\n    dispatch(action);\n  } */\n\n  /*\n  function handleSubmit(formData) {\n    const { name, email, age, weight, height } = formData;\n    const action = studentId\n      ? request('UPDATE', 'students', {\n          id: studentId,\n          rest: { name, email, age, weight, height },\n        })\n      : request('CREATE', 'students', { name, email, age, weight, height });\n    dispatch(action);\n  } */\n\n  function handleSubmit(id, formData) {\n    const action = id ? request('UPDATE', 'matriculations', {\n      id: studentId,\n      rest: formData\n    }) : request('CREATE', 'matriculations', formData);\n    dispatch(action);\n  }\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Cadastro de aluno\"), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"greyButton\",\n    onClick: () => goTo('students'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(MdArrowBack, {\n    size: 16,\n    color: \"#ee4d64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), \" VOLTAR\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSubmit(studentId, {\n      name,\n      email,\n      age,\n      weight,\n      height\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(MdCheck, {\n    size: 16,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), \" SALVAR\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"NOME COMPLETO\", React.createElement(Input, {\n    type: \"text\",\n    onChange: event => setStudent({\n      id,\n      name: event.target.value,\n      email,\n      age,\n      weight,\n      height\n    }),\n    value: name,\n    name: \"name\",\n    id: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"E-MAIL\", React.createElement(Input, {\n    type: \"email\",\n    onChange: event => setStudent({\n      id,\n      name,\n      email: event.target.value,\n      age,\n      weight,\n      height\n    }),\n    value: email,\n    name: \"email\",\n    id: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"IDADE\", React.createElement(Input, {\n    type: \"text\",\n    onChange: event => setStudent({\n      id,\n      name,\n      email,\n      age: event.target.value,\n      weight,\n      height\n    }),\n    value: age,\n    name: \"age\",\n    id: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"PESO\", React.createElement(Input, {\n    type: \"text\",\n    onChange: event => setStudent({\n      id,\n      name,\n      email,\n      age,\n      weight: event.target.value,\n      height\n    }),\n    value: weight,\n    name: \"weight\",\n    id: \"weght\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"ALTURA\", React.createElement(Input, {\n    type: \"text\",\n    onChange: event => setStudent({\n      id,\n      name,\n      email,\n      age,\n      weight,\n      height: event.target.value\n    }),\n    value: height,\n    name: \"height\",\n    id: \"height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })))))));\n}","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Students/form.js"],"names":["React","useState","useEffect","useDispatch","Input","MdArrowBack","MdCheck","api","newStudentRequest","updateStudentRequest","request","history","StudentsForm","dispatch","student","setStudent","id","name","email","age","weight","height","params","URL","document","location","searchParams","studentId","get","studentData","response","data","handleSubmit","formData","action","rest","goTo","page","push","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input } from '@rocketseat/unform';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from '~/services/api';\n\nimport {\n  newStudentRequest,\n  updateStudentRequest,\n} from '~/store/modules/student/actions';\n\nimport { request } from '~/store/modules/data/actions';\n\nimport history from '~/services/history';\n\nexport default function StudentsForm() {\n  const dispatch = useDispatch();\n\n  const [student, setStudent] = useState([]);\n  const { id, name, email, age, weight, height } = student;\n\n  const params = new URL(document.location).searchParams;\n  const studentId = params.get('id') ? params.get('id') : '';\n\n  useEffect(() => {\n    async function studentData() {\n      const response = await api.get(`students/${studentId}`);\n\n      setStudent(response.data);\n    }\n\n    if (studentId !== '') {\n      studentData();\n    }\n  }, [studentId]);\n\n  /*\n  function handleSubmit(studentFormData) {\n    const { name, email, age, weight, height } = studentFormData;\n    const action = studentId\n      ? updateStudentRequest(studentFormData)\n      : newStudentRequest({ name, email, age, weight, height });\n    dispatch(action);\n  } */\n\n  /*\n  function handleSubmit(formData) {\n    const { name, email, age, weight, height } = formData;\n    const action = studentId\n      ? request('UPDATE', 'students', {\n          id: studentId,\n          rest: { name, email, age, weight, height },\n        })\n      : request('CREATE', 'students', { name, email, age, weight, height });\n    dispatch(action);\n  } */\n\n  function handleSubmit(id, formData) {\n    const action = id\n      ? request('UPDATE', 'matriculations', {\n          id: studentId,\n          rest: formData,\n        })\n      : request('CREATE', 'matriculations', formData);\n    dispatch(action);\n  }\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Cadastro de aluno</h1>\n        <aside>\n          <button\n            type='button'\n            className='greyButton'\n            onClick={() => goTo('students')}\n          >\n            <MdArrowBack size={16} color='#ee4d64' /> VOLTAR\n          </button>\n          <button\n            type='button'\n            onClick={() =>\n              handleSubmit(studentId, { name, email, age, weight, height })\n            }\n          >\n            <MdCheck size={16} color='#fff' /> SALVAR\n          </button>\n        </aside>\n      </header>\n      <div>\n        <form>\n          <label htmlFor='name'>\n            NOME COMPLETO\n            <Input\n              type='text'\n              onChange={event =>\n                setStudent({\n                  id,\n                  name: event.target.value,\n                  email,\n                  age,\n                  weight,\n                  height,\n                })\n              }\n              value={name}\n              name='name'\n              id='name'\n            />\n          </label>\n          <label htmlFor='email'>\n            E-MAIL\n            <Input\n              type='email'\n              onChange={event =>\n                setStudent({\n                  id,\n                  name,\n                  email: event.target.value,\n                  age,\n                  weight,\n                  height,\n                })\n              }\n              value={email}\n              name='email'\n              id='email'\n            />\n          </label>\n          <div>\n            <div>\n              <label htmlFor='age'>\n                IDADE\n                <Input\n                  type='text'\n                  onChange={event =>\n                    setStudent({\n                      id,\n                      name,\n                      email,\n                      age: event.target.value,\n                      weight,\n                      height,\n                    })\n                  }\n                  value={age}\n                  name='age'\n                  id='age'\n                />\n              </label>\n            </div>\n            <div>\n              <label htmlFor='weight'>\n                PESO\n                <Input\n                  type='text'\n                  onChange={event =>\n                    setStudent({\n                      id,\n                      name,\n                      email,\n                      age,\n                      weight: event.target.value,\n                      height,\n                    })\n                  }\n                  value={weight}\n                  name='weight'\n                  id='weght'\n                />\n              </label>\n            </div>\n            <div>\n              <label htmlFor='height'>\n                ALTURA\n                <Input\n                  type='text'\n                  onChange={event =>\n                    setStudent({\n                      id,\n                      name,\n                      email,\n                      age,\n                      weight,\n                      height: event.target.value,\n                    })\n                  }\n                  value={height}\n                  name='height'\n                  id='height'\n                />\n              </label>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}