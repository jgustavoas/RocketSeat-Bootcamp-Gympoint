{"ast":null,"code":"import _objectWithoutProperties from \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from \"../../../services/api\";\nimport { newPlanFailure, updatePlanFailure } from './actions';\nexport function* updatePlan({\n  payload\n}) {\n  try {\n    const _payload$data = payload.data,\n          id = _payload$data.id,\n          rest = _objectWithoutProperties(_payload$data, [\"id\"]);\n\n    yield call(api.put, `/plans/${id}`, rest);\n    toast.success('Plano atualizado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao atualizar dados!');\n    yield put(updatePlanFailure());\n  }\n}\nexport function* newPlan({\n  payload\n}) {\n  try {\n    const _payload$data2 = payload.data,\n          title = _payload$data2.title,\n          duration = _payload$data2.duration,\n          price = _payload$data2.price;\n    yield call(api.post, `plans`, {\n      title,\n      duration,\n      price\n    });\n    toast.success('Plano cadastrado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao inserir dados!');\n    yield put(newPlanFailure());\n  }\n}\nexport function* deletePlan({\n  payload\n}) {\n  try {\n    const data = payload.data;\n    yield call(api.delete, `plans`, {\n      data: {\n        id: String(data)\n      }\n    });\n    toast.success('Plano deletado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao deletar plano!');\n  }\n}\nexport default all([takeLatest('@plan/UPDATE_PLAN_REQUEST', updatePlan), takeLatest('@plan/NEW_PLAN_REQUEST', newPlan), takeLatest('@plan/DELETE_PLAN_REQUEST', deletePlan)]);","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/src/store/modules/plan/sagas.js"],"names":["takeLatest","call","put","all","toast","api","newPlanFailure","updatePlanFailure","updatePlan","payload","data","id","rest","success","err","error","newPlan","title","duration","price","post","deletePlan","delete","String"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,WAAlD;AAEA,OAAO,UAAUC,UAAV,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAkC;AACvC,MAAI;AAAA,0BACsBA,OAAO,CAACC,IAD9B;AAAA,UACMC,EADN,iBACMA,EADN;AAAA,UACaC,IADb;;AAGF,UAAMX,IAAI,CAACI,GAAG,CAACH,GAAL,EAAW,UAASS,EAAG,EAAvB,EAA0BC,IAA1B,CAAV;AAEAR,IAAAA,KAAK,CAACS,OAAN,CAAc,+BAAd;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZV,IAAAA,KAAK,CAACW,KAAN,CAAY,0BAAZ;AACA,UAAMb,GAAG,CAACK,iBAAiB,EAAlB,CAAT;AACD;AACF;AAED,OAAO,UAAUS,OAAV,CAAkB;AAAEP,EAAAA;AAAF,CAAlB,EAA+B;AACpC,MAAI;AAAA,2BACiCA,OAAO,CAACC,IADzC;AAAA,UACMO,KADN,kBACMA,KADN;AAAA,UACaC,QADb,kBACaA,QADb;AAAA,UACuBC,KADvB,kBACuBA,KADvB;AAEF,UAAMlB,IAAI,CAACI,GAAG,CAACe,IAAL,EAAY,OAAZ,EAAoB;AAAEH,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,KAApB,CAAV;AAEAf,IAAAA,KAAK,CAACS,OAAN,CAAc,+BAAd;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZV,IAAAA,KAAK,CAACW,KAAN,CAAY,wBAAZ;AACA,UAAMb,GAAG,CAACI,cAAc,EAAf,CAAT;AACD;AACF;AAED,OAAO,UAAUe,UAAV,CAAqB;AAAEZ,EAAAA;AAAF,CAArB,EAAkC;AACvC,MAAI;AAAA,UACMC,IADN,GACeD,OADf,CACMC,IADN;AAEF,UAAMT,IAAI,CAACI,GAAG,CAACiB,MAAL,EAAc,OAAd,EAAsB;AAAEZ,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAEY,MAAM,CAACb,IAAD;AAAZ;AAAR,KAAtB,CAAV;AAEAN,IAAAA,KAAK,CAACS,OAAN,CAAc,6BAAd;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZV,IAAAA,KAAK,CAACW,KAAN,CAAY,wBAAZ;AACD;AACF;AAED,eAAeZ,GAAG,CAAC,CACjBH,UAAU,CAAC,2BAAD,EAA8BQ,UAA9B,CADO,EAEjBR,UAAU,CAAC,wBAAD,EAA2BgB,OAA3B,CAFO,EAGjBhB,UAAU,CAAC,2BAAD,EAA8BqB,UAA9B,CAHO,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '~/services/api';\n\nimport { newPlanFailure, updatePlanFailure } from './actions';\n\nexport function* updatePlan({ payload }) {\n  try {\n    const { id, ...rest } = payload.data;\n\n    yield call(api.put, `/plans/${id}`, rest);\n\n    toast.success('Plano atualizado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao atualizar dados!');\n    yield put(updatePlanFailure());\n  }\n}\n\nexport function* newPlan({ payload }) {\n  try {\n    const { title, duration, price } = payload.data;\n    yield call(api.post, `plans`, { title, duration, price });\n\n    toast.success('Plano cadastrado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao inserir dados!');\n    yield put(newPlanFailure());\n  }\n}\n\nexport function* deletePlan({ payload }) {\n  try {\n    const { data } = payload;\n    yield call(api.delete, `plans`, { data: { id: String(data) } });\n\n    toast.success('Plano deletado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao deletar plano!');\n  }\n}\n\nexport default all([\n  takeLatest('@plan/UPDATE_PLAN_REQUEST', updatePlan),\n  takeLatest('@plan/NEW_PLAN_REQUEST', newPlan),\n  takeLatest('@plan/DELETE_PLAN_REQUEST', deletePlan),\n]);\n"]},"metadata":{},"sourceType":"module"}