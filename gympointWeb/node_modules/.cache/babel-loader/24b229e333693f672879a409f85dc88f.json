{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Matriculations/form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format, parseISO, addMonths } from 'date-fns';\nimport { utcToZonedTime, zonedTimeToUtc } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport { colourOptions } from './data';\nimport api from \"../../services/api\";\nimport { request } from \"../../store/modules/data/actions\";\nimport history from \"../../services/history\";\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        students = _useState2[0],\n        setStudents = _useState2[1];\n\n  const _useState3 = useState(students),\n        _useState4 = _slicedToArray(_useState3, 2),\n        studentsList = _useState4[0],\n        setStudentsList = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        studentNameSelected = _useState6[0],\n        setStudentNameSelected = _useState6[1];\n\n  const _useState7 = useState('none'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        toggleDisplay = _useState8[0],\n        setToggleDisplay = _useState8[1];\n\n  const today = format(zonedTimeToUtc(new Date(), 'Europe/London'), 'yyyy-MM-dd', {\n    locale: pt\n  });\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        matriculation = _useState10[0],\n        setMatriculation = _useState10[1];\n\n  const active = matriculation.active,\n        studentId = matriculation.studentId,\n        planId = matriculation.planId,\n        price = matriculation.price,\n        studentName = matriculation.studentName,\n        planTitle = matriculation.planTitle,\n        planDuration = matriculation.planDuration,\n        start_dateFormated = matriculation.start_dateFormated,\n        end_dateFormated = matriculation.end_dateFormated;\n  console.tron.log(matriculation);\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        plans = _useState12[0],\n        setPlans = _useState12[1];\n\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n  useEffect(() => {\n    async function studentsData() {\n      const response = await api.get(`students`);\n      setStudents(response.data);\n    }\n\n    setMatriculation(studentsData);\n\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n\n    setMatriculation(plansData);\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n      const formatStartDate = format(parseISO(response.data.start_date), 'yyyy-MM-dd', {\n        locale: pt\n      });\n      const formatEndDate = format(parseISO(response.data.end_date), 'yyyy-MM-dd', {\n        locale: pt\n      });\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        studentName: response.data.students.name,\n        planId: response.data.plan_id,\n        planDuration: response.data.plans.duration,\n        planTitle: response.data.plans.title,\n        price: response.data.price,\n        start_dateFormated: formatStartDate,\n        end_dateFormated: formatEndDate\n      };\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function formatEndDate(refDate, planDuration) {\n    return format(addMonths(new Date(refDate), planDuration), 'yyyy-MM-dd');\n  }\n\n  function handleEvent(planValue, start_dateFormated) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      studentName,\n      planId: planValue.id,\n      planDuration: planValue.duration,\n      planTitle: planValue.title,\n      price: planValue.price * planValue.duration,\n      start_dateFormated,\n      end_dateFormated: formatEndDate(start_dateFormated, planValue.duration)\n    });\n  }\n\n  function handleSubmit(formData) {\n    const studentId = formData.studentId,\n          planId = formData.planId,\n          start_dateFormated = formData.start_dateFormated;\n    const action = matriculationId ? request('UPDATE', 'matriculations', {\n      id: studentId,\n      rest: {\n        plan_id: planId,\n        start_date: start_dateFormated\n      }\n    }) : request('CREATE', 'matriculations', {\n      student_id: studentId,\n      plan_id: planId,\n      start_date: start_dateFormated\n    });\n    dispatch(action);\n  }\n\n  function filterStudents(name) {\n    setToggleDisplay('block');\n    setStudentsList([]);\n    students.map(function (list) {\n      if (list.name.search(name) !== -1) console.tron.log(list.name);\n      return setStudentsList([{\n        name: list.name\n      }]);\n    });\n    console.tron.log(studentsList);\n  }\n\n  function handleKeyPress(key) {\n    // eslint-disable-next-line eqeqeq\n    if (key == '40') {\n      document.getElementById('studentsList').focus();\n      console.tron.log(key);\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Cadastro de matr\\xEDcula\"), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"greyButton\",\n    onClick: () => goTo('matriculations'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(MdArrowBack, {\n    size: 16,\n    color: \"#ee4d64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), \" VOLTAR\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSubmit(matriculation),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(MdCheck, {\n    size: 16,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), \" SALVAR\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"NOME DO ALUNO\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    disabled: matriculationId === '' ? '' : 'disabled',\n    value: studentName,\n    onChange: event => setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      planId,\n      planDuration,\n      price,\n      studentName: event.target.value,\n      planTitle,\n      start_dateFormated: today,\n      end_dateFormated\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"test-target\",\n    id: \"test-target\",\n    onChange: event => event.target.value !== '' ? filterStudents(event.target.value) : setToggleDisplay('none'),\n    onKeyDown: event => handleKeyPress(event.keyCode),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    style: {\n      height: 'auto',\n      display: toggleDisplay\n    },\n    id: \"studentsList\",\n    size: students.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, students.map((student, index) => React.createElement(\"option\", {\n    selected: index === 0 && 'selected',\n    value: student.id,\n    name: student.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, `${student.name} ${index} ${student.id}`))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"PLANO\"), React.createElement(\"select\", {\n    id: \"planSelect\",\n    name: \"plans\",\n    onChange: event => handleEvent(JSON.parse(event.target.value), start_dateFormated || today),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"Selecione\"), plans.map(plan => React.createElement(\"option\", {\n    selected: matriculation.planId === plan.id ? 'selected' : '',\n    value: `{\"id\":${plan.id}, \"title\":\"${plan.title}\", \"price\":${plan.price}, \"duration\":${plan.duration}}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, `${plan.title} (R$${plan.price},00 / ${plan.duration} ${plan.duration > 1 ? 'meses' : 'mês'})`)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"DATA DE IN\\xCDCIO\"), React.createElement(\"input\", {\n    type: \"date\",\n    value: start_dateFormated || today,\n    name: \"startDateInput\",\n    onChange: event => setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      planId,\n      planDuration,\n      price,\n      studentName,\n      planTitle,\n      start_dateFormated: event.target.value,\n      end_dateFormated: formatEndDate(event.target.value, planDuration || 1)\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"DATA DE T\\xC9RMINO\"), React.createElement(\"input\", {\n    type: \"date\",\n    disabled: true,\n    name: \"\",\n    id: \"\",\n    value: planDuration ? end_dateFormated : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, \"VALOR TOTAL\"), React.createElement(\"input\", {\n    disabled: \"disabled\",\n    value: price || 0,\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Matriculations/form.js"],"names":["React","useState","useEffect","useDispatch","format","parseISO","addMonths","utcToZonedTime","zonedTimeToUtc","pt","MdArrowBack","MdCheck","colourOptions","api","request","history","Dashboard","dispatch","students","setStudents","studentsList","setStudentsList","studentNameSelected","setStudentNameSelected","toggleDisplay","setToggleDisplay","today","Date","locale","matriculation","setMatriculation","active","studentId","planId","price","studentName","planTitle","planDuration","start_dateFormated","end_dateFormated","console","tron","log","plans","setPlans","params","URL","document","location","searchParams","matriculationId","get","studentsData","response","data","plansData","matriculationData","formatStartDate","start_date","formatEndDate","end_date","id","student_id","name","plan_id","duration","title","goTo","page","push","refDate","handleEvent","planValue","handleSubmit","formData","action","rest","filterStudents","map","list","search","handleKeyPress","key","getElementById","focus","event","target","value","keyCode","height","display","length","student","index","JSON","parse","plan"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { format, parseISO, addMonths } from 'date-fns';\nimport { utcToZonedTime, zonedTimeToUtc } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\n\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport { colourOptions } from './data';\n\nimport api from '~/services/api';\n\nimport { request } from '~/store/modules/data/actions';\n\nimport history from '~/services/history';\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const [students, setStudents] = useState([]);\n  const [studentsList, setStudentsList] = useState(students);\n  const [studentNameSelected, setStudentNameSelected] = useState('');\n  const [toggleDisplay, setToggleDisplay] = useState('none');\n\n  const today = format(\n    zonedTimeToUtc(new Date(), 'Europe/London'),\n    'yyyy-MM-dd',\n    {\n      locale: pt,\n    }\n  );\n\n  const [matriculation, setMatriculation] = useState([]);\n\n  const {\n    active,\n    studentId,\n    planId,\n    price,\n    studentName,\n    planTitle,\n    planDuration,\n    start_dateFormated,\n    end_dateFormated,\n  } = matriculation;\n  console.tron.log(matriculation);\n\n  const [plans, setPlans] = useState([]);\n\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n\n  useEffect(() => {\n    async function studentsData() {\n      const response = await api.get(`students`);\n      setStudents(response.data);\n    }\n    setMatriculation(studentsData);\n\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n    setMatriculation(plansData);\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n\n      const formatStartDate = format(\n        parseISO(response.data.start_date),\n        'yyyy-MM-dd',\n        {\n          locale: pt,\n        }\n      );\n      const formatEndDate = format(\n        parseISO(response.data.end_date),\n        'yyyy-MM-dd',\n        {\n          locale: pt,\n        }\n      );\n\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        studentName: response.data.students.name,\n        planId: response.data.plan_id,\n        planDuration: response.data.plans.duration,\n        planTitle: response.data.plans.title,\n        price: response.data.price,\n        start_dateFormated: formatStartDate,\n        end_dateFormated: formatEndDate,\n      };\n\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function formatEndDate(refDate, planDuration) {\n    return format(addMonths(new Date(refDate), planDuration), 'yyyy-MM-dd');\n  }\n\n  function handleEvent(planValue, start_dateFormated) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      studentName,\n      planId: planValue.id,\n      planDuration: planValue.duration,\n      planTitle: planValue.title,\n      price: planValue.price * planValue.duration,\n      start_dateFormated,\n      end_dateFormated: formatEndDate(start_dateFormated, planValue.duration),\n    });\n  }\n\n  function handleSubmit(formData) {\n    const { studentId, planId, start_dateFormated } = formData;\n    const action = matriculationId\n      ? request('UPDATE', 'matriculations', {\n          id: studentId,\n          rest: { plan_id: planId, start_date: start_dateFormated },\n        })\n      : request('CREATE', 'matriculations', {\n          student_id: studentId,\n          plan_id: planId,\n          start_date: start_dateFormated,\n        });\n    dispatch(action);\n  }\n\n  function filterStudents(name) {\n    setToggleDisplay('block');\n    setStudentsList([]);\n    students.map(function(list) {\n      if (list.name.search(name) !== -1) console.tron.log(list.name);\n      return setStudentsList([{ name: list.name }]);\n    });\n    console.tron.log(studentsList);\n  }\n\n  function handleKeyPress(key) {\n    // eslint-disable-next-line eqeqeq\n    if (key == '40') {\n      document.getElementById('studentsList').focus();\n      console.tron.log(key);\n    }\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Cadastro de matrícula</h1>\n        <aside>\n          <button\n            type='button'\n            className='greyButton'\n            onClick={() => goTo('matriculations')}\n          >\n            <MdArrowBack size={16} color='#ee4d64' /> VOLTAR\n          </button>\n          <button type='button' onClick={() => handleSubmit(matriculation)}>\n            <MdCheck size={16} color='#fff' /> SALVAR\n          </button>\n        </aside>\n      </header>\n      <div>\n        <form>\n          <label htmlFor='name'>NOME DO ALUNO</label>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            disabled={matriculationId === '' ? '' : 'disabled'}\n            value={studentName}\n            onChange={event =>\n              setMatriculation({\n                active,\n                matriculationId,\n                studentId,\n                planId,\n                planDuration,\n                price,\n                studentName: event.target.value,\n                planTitle,\n                start_dateFormated: today,\n                end_dateFormated,\n              })\n            }\n          />\n\n          <input\n            autoComplete='off'\n            type='text'\n            name='test-target'\n            id='test-target'\n            onChange={event =>\n              event.target.value !== ''\n                ? filterStudents(event.target.value)\n                : setToggleDisplay('none')\n            }\n            onKeyDown={event => handleKeyPress(event.keyCode)}\n          />\n          <select\n            style={{ height: 'auto', display: toggleDisplay }}\n            id='studentsList'\n            size={students.length}\n          >\n            {students.map((student, index) => (\n              <option\n                selected={index === 0 && 'selected'}\n                value={student.id}\n                name={student.name}\n              >{`${student.name} ${index} ${student.id}`}</option>\n            ))}\n          </select>\n          <div>\n            <div>\n              <label htmlFor='name'>PLANO</label>\n              <select\n                id='planSelect'\n                name='plans'\n                onChange={event =>\n                  handleEvent(\n                    JSON.parse(event.target.value),\n                    start_dateFormated || today\n                  )\n                }\n              >\n                <option>Selecione</option>\n                {plans.map(plan => (\n                  <option\n                    selected={\n                      matriculation.planId === plan.id ? 'selected' : ''\n                    }\n                    value={`{\"id\":${plan.id}, \"title\":\"${plan.title}\", \"price\":${plan.price}, \"duration\":${plan.duration}}`}\n                  >\n                    {`${plan.title} (R$${plan.price},00 / ${plan.duration} ${\n                      plan.duration > 1 ? 'meses' : 'mês'\n                    })`}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE INÍCIO</label>\n              <input\n                type='date'\n                value={start_dateFormated || today}\n                name='startDateInput'\n                onChange={event =>\n                  setMatriculation({\n                    active,\n                    matriculationId,\n                    studentId,\n                    planId,\n                    planDuration,\n                    price,\n                    studentName,\n                    planTitle,\n                    start_dateFormated: event.target.value,\n                    end_dateFormated: formatEndDate(\n                      event.target.value,\n                      planDuration || 1\n                    ),\n                  })\n                }\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE TÉRMINO</label>\n              <input\n                type='date'\n                disabled\n                name=''\n                id=''\n                value={planDuration ? end_dateFormated : ''}\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>VALOR TOTAL</label>\n              <input\n                disabled='disabled'\n                value={price || 0}\n                type='text'\n                name=''\n                id=''\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}