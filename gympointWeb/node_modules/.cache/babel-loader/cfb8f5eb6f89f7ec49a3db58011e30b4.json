{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/src/pages/Students/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MdAdd } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport { deleteStudentRequest } from \"../../store/modules/student/actions\";\nimport history from \"../../services/history\";\nexport default function Students() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        students = _useState2[0],\n        setStudents = _useState2[1];\n\n  async function loadStudents(name) {\n    const queryParamsName = name !== undefined ? `?name=${name}` : '';\n    const response = await api.get(`students${queryParamsName}`);\n    setStudents(response.data);\n  }\n\n  useEffect(() => {\n    loadStudents();\n  }, []);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function deleteStudent(id, name) {\n    if (window.confirm(`Apagar o cadastro do aluno ${name} (id ${id})?`)) {\n      dispatch(deleteStudentRequest(id));\n    }\n\n    loadStudents();\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Gerenciando alunos\"), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => goTo('studentsform'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(MdAdd, {\n    size: 16,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), \" CADASTRAR\"), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => loadStudents(event.target.value),\n    placeholder: \"Procurar aluno\",\n    name: \"procurar\",\n    id: \"procurar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"NOME\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"EMAIL\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"IDADE\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"A\\xC7\\xD5ES\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, students.map(student => React.createElement(\"tr\", {\n    key: student.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, student.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, student.email), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, student.age), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"blueMinimalButton\",\n    onClick: () => goTo(`studentsform?id=${student.id}`),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"editar\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => deleteStudent(student.id, student.name),\n    className: \"redMinimalButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"apagar\"))))))));\n}","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/src/pages/Students/index.js"],"names":["React","useState","useEffect","useDispatch","MdAdd","api","deleteStudentRequest","history","Students","dispatch","students","setStudents","loadStudents","name","queryParamsName","undefined","response","get","data","goTo","page","push","deleteStudent","id","window","confirm","event","target","value","map","student","email","age"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MdAdd } from 'react-icons/md';\nimport api from '~/services/api';\n\nimport { deleteStudentRequest } from '~/store/modules/student/actions';\n\nimport history from '~/services/history';\n\nexport default function Students() {\n  const dispatch = useDispatch();\n  const [students, setStudents] = useState([]);\n\n  async function loadStudents(name) {\n    const queryParamsName = name !== undefined ? `?name=${name}` : '';\n    const response = await api.get(`students${queryParamsName}`);\n\n    setStudents(response.data);\n  }\n\n  useEffect(() => {\n    loadStudents();\n  }, []);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function deleteStudent(id, name) {\n    if (window.confirm(`Apagar o cadastro do aluno ${name} (id ${id})?`)) {\n      dispatch(deleteStudentRequest(id));\n    }\n    loadStudents();\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Gerenciando alunos</h1>\n        <aside>\n          <button type='button' onClick={() => goTo('studentsform')}>\n            <MdAdd size={16} color='#fff' /> CADASTRAR\n          </button>\n          <input\n            type='text'\n            onChange={event => loadStudents(event.target.value)}\n            placeholder='Procurar aluno'\n            name='procurar'\n            id='procurar'\n          />\n        </aside>\n      </header>\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>NOME</th>\n              <th>EMAIL</th>\n              <th>IDADE</th>\n              <th>AÇÕES</th>\n            </tr>\n          </thead>\n          <tbody>\n            {students.map(student => (\n              <tr key={student.id}>\n                <td>{student.name}</td>\n                <td>{student.email}</td>\n                <td>{student.age}</td>\n                <td>\n                  <button\n                    type='button'\n                    className='blueMinimalButton'\n                    onClick={() => goTo(`studentsform?id=${student.id}`)}\n                  >\n                    editar\n                  </button>\n                  <button\n                    type='button'\n                    onClick={() => deleteStudent(student.id, student.name)}\n                    className='redMinimalButton'\n                  >\n                    apagar\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}