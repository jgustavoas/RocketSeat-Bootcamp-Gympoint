{"ast":null,"code":"import _objectWithoutProperties from \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from \"../../../services/api\"; // import { failure } from './actions';\n\nexport function* toCreate({\n  payload\n}) {\n  try {\n    const _payload$data = payload.data,\n          name = _payload$data.name,\n          email = _payload$data.email,\n          age = _payload$data.age,\n          weight = _payload$data.weight,\n          height = _payload$data.height;\n    yield call(api.post, `matriculations`, {\n      name,\n      email,\n      age,\n      weight,\n      height\n    });\n    toast.success('Aluno cadastrado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao atualizar dados!'); // yield put(failure(payload.page, 'CREATE', payload.data));\n  }\n}\nexport function* toUpdate({\n  payload\n}) {\n  try {\n    const _payload$data2 = payload.data,\n          id = _payload$data2.id,\n          rest = _objectWithoutProperties(_payload$data2, [\"id\"]);\n\n    yield call(api.put, `/${payload.page}/${id}`, rest);\n    toast.success('Cadastro do aluno atualizado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao inserir dados!'); // yield put(failure(payload.page, 'UPDATE', payload.data));\n  }\n}\nexport function* toDelete({\n  payload\n}) {\n  console.tron.log(payload);\n\n  try {\n    const page = payload.page,\n          data = payload.data;\n    yield call(api.delete, `matriculations`, {\n      data: {\n        id: String(data)\n      }\n    });\n    toast.success('Matrícula deletada com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao deletar matrícula!');\n  }\n}\nexport default all([takeLatest('CREATE', toCreate), takeLatest('UPDATE', toUpdate), takeLatest('DELETE', toDelete)]);","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/src/store/modules/data/sagas.js"],"names":["takeLatest","call","put","all","toast","api","toCreate","payload","data","name","email","age","weight","height","post","success","err","error","toUpdate","id","rest","page","toDelete","console","tron","log","delete","String"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CAEA;;AAEA,OAAO,UAAUC,QAAV,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAgC;AACrC,MAAI;AAAA,0BAC2CA,OAAO,CAACC,IADnD;AAAA,UACMC,IADN,iBACMA,IADN;AAAA,UACYC,KADZ,iBACYA,KADZ;AAAA,UACmBC,GADnB,iBACmBA,GADnB;AAAA,UACwBC,MADxB,iBACwBA,MADxB;AAAA,UACgCC,MADhC,iBACgCA,MADhC;AAEF,UAAMZ,IAAI,CAACI,GAAG,CAACS,IAAL,EAAY,gBAAZ,EAA6B;AACrCL,MAAAA,IADqC;AAErCC,MAAAA,KAFqC;AAGrCC,MAAAA,GAHqC;AAIrCC,MAAAA,MAJqC;AAKrCC,MAAAA;AALqC,KAA7B,CAAV;AAQAT,IAAAA,KAAK,CAACW,OAAN,CAAc,+BAAd;AACD,GAXD,CAWE,OAAOC,GAAP,EAAY;AACZZ,IAAAA,KAAK,CAACa,KAAN,CAAY,0BAAZ,EADY,CAEZ;AACD;AACF;AAED,OAAO,UAAUC,QAAV,CAAmB;AAAEX,EAAAA;AAAF,CAAnB,EAAgC;AACrC,MAAI;AAAA,2BACsBA,OAAO,CAACC,IAD9B;AAAA,UACMW,EADN,kBACMA,EADN;AAAA,UACaC,IADb;;AAGF,UAAMnB,IAAI,CAACI,GAAG,CAACH,GAAL,EAAW,IAAGK,OAAO,CAACc,IAAK,IAAGF,EAAG,EAAjC,EAAoCC,IAApC,CAAV;AAEAhB,IAAAA,KAAK,CAACW,OAAN,CAAc,2CAAd;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZZ,IAAAA,KAAK,CAACa,KAAN,CAAY,wBAAZ,EADY,CAEZ;AACD;AACF;AAED,OAAO,UAAUK,QAAV,CAAmB;AAAEf,EAAAA;AAAF,CAAnB,EAAgC;AACrCgB,EAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBlB,OAAjB;;AACA,MAAI;AAAA,UACMc,IADN,GACqBd,OADrB,CACMc,IADN;AAAA,UACYb,IADZ,GACqBD,OADrB,CACYC,IADZ;AAEF,UAAMP,IAAI,CAACI,GAAG,CAACqB,MAAL,EAAc,gBAAd,EAA+B;AAAElB,MAAAA,IAAI,EAAE;AAAEW,QAAAA,EAAE,EAAEQ,MAAM,CAACnB,IAAD;AAAZ;AAAR,KAA/B,CAAV;AAEAJ,IAAAA,KAAK,CAACW,OAAN,CAAc,iCAAd;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZZ,IAAAA,KAAK,CAACa,KAAN,CAAY,4BAAZ;AACD;AACF;AAED,eAAed,GAAG,CAAC,CACjBH,UAAU,CAAC,QAAD,EAAWM,QAAX,CADO,EAEjBN,UAAU,CAAC,QAAD,EAAWkB,QAAX,CAFO,EAGjBlB,UAAU,CAAC,QAAD,EAAWsB,QAAX,CAHO,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '~/services/api';\n\n// import { failure } from './actions';\n\nexport function* toCreate({ payload }) {\n  try {\n    const { name, email, age, weight, height } = payload.data;\n    yield call(api.post, `matriculations`, {\n      name,\n      email,\n      age,\n      weight,\n      height,\n    });\n\n    toast.success('Aluno cadastrado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao atualizar dados!');\n    // yield put(failure(payload.page, 'CREATE', payload.data));\n  }\n}\n\nexport function* toUpdate({ payload }) {\n  try {\n    const { id, ...rest } = payload.data;\n\n    yield call(api.put, `/${payload.page}/${id}`, rest);\n\n    toast.success('Cadastro do aluno atualizado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao inserir dados!');\n    // yield put(failure(payload.page, 'UPDATE', payload.data));\n  }\n}\n\nexport function* toDelete({ payload }) {\n  console.tron.log(payload);\n  try {\n    const { page, data } = payload;\n    yield call(api.delete, `matriculations`, { data: { id: String(data) } });\n\n    toast.success('Matrícula deletada com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao deletar matrícula!');\n  }\n}\n\nexport default all([\n  takeLatest('CREATE', toCreate),\n  takeLatest('UPDATE', toUpdate),\n  takeLatest('DELETE', toDelete),\n]);\n"]},"metadata":{},"sourceType":"module"}