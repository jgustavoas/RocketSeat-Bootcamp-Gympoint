{"ast":null,"code":"import _objectWithoutProperties from \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/src/pages/Plans/form.js\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport { newPlanRequest, updatePlanRequest } from \"../../store/modules/plan/actions\";\nimport history from \"../../services/history\";\nexport default function Plan() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        plan = _useState2[0],\n        setPlan = _useState2[1];\n\n  const id = plan.id,\n        rest = _objectWithoutProperties(plan, [\"id\"]);\n\n  const params = new URL(document.location).searchParams;\n  const planId = params.get('id') ? params.get('id') : '';\n  useEffect(() => {\n    async function planData() {\n      const response = await api.get(`plans/${planId}`);\n      setPlan(response.data);\n    }\n\n    if (planId !== '') {\n      planData();\n    }\n  }, [planId]);\n\n  function handleSubmit(planFormData) {\n    const action = planId ? updatePlanRequest(planFormData) : newPlanRequest(planFormData);\n    dispatch(action);\n  }\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Cadastro de plano\"), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"greyButton\",\n    onClick: () => goTo('plans'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(MdArrowBack, {\n    size: 16,\n    color: \"#ee4d64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \" VOLTAR\"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(MdCheck, {\n    onClick: () => handleSubmit(plan),\n    size: 16,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), ' ', \"SALVAR\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"NOME DO PLANO\"), React.createElement(\"input\", {\n    onChange: event => setPlan({\n      id,\n      title: event.target.value,\n      duration,\n      price\n    }),\n    value: rest.title,\n    type: \"text\",\n    name: \"title\",\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"MESES DE DURA\\xC7\\xC3O\"), React.createElement(\"input\", {\n    onChange: event => setPlan({\n      id,\n      title,\n      duration: event.target.value,\n      price\n    }),\n    value: rest.duration,\n    type: \"text\",\n    name: \"duration\",\n    id: \"duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"PRE\\xC7O MENSAL (R$)\"), React.createElement(\"input\", {\n    onChange: event => setPlan({\n      id,\n      title,\n      duration,\n      price: event.target.value\n    }),\n    value: rest.price,\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"PRE\\xC7O TOTAL (R$)\"), React.createElement(\"input\", {\n    disabled: \"disabled\",\n    value: duration * price,\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/src/pages/Plans/form.js"],"names":["React","useState","useMemo","useEffect","useDispatch","MdArrowBack","MdCheck","api","newPlanRequest","updatePlanRequest","history","Plan","dispatch","plan","setPlan","id","rest","params","URL","document","location","searchParams","planId","get","planData","response","data","handleSubmit","planFormData","action","goTo","page","push","event","title","target","value","duration","price"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from '~/services/api';\n\nimport {\n  newPlanRequest,\n  updatePlanRequest,\n} from '~/store/modules/plan/actions';\n\nimport history from '~/services/history';\n\nexport default function Plan() {\n  const dispatch = useDispatch();\n\n  const [plan, setPlan] = useState([]);\n  const { id, ...rest } = plan;\n\n  const params = new URL(document.location).searchParams;\n  const planId = params.get('id') ? params.get('id') : '';\n\n  useEffect(() => {\n    async function planData() {\n      const response = await api.get(`plans/${planId}`);\n\n      setPlan(response.data);\n    }\n\n    if (planId !== '') {\n      planData();\n    }\n  }, [planId]);\n\n  function handleSubmit(planFormData) {\n    const action = planId\n      ? updatePlanRequest(planFormData)\n      : newPlanRequest(planFormData);\n    dispatch(action);\n  }\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Cadastro de plano</h1>\n        <aside>\n          <button\n            type='button'\n            className='greyButton'\n            onClick={() => goTo('plans')}\n          >\n            <MdArrowBack size={16} color='#ee4d64' /> VOLTAR\n          </button>\n          <button type='button'>\n            <MdCheck\n              onClick={() => handleSubmit(plan)}\n              size={16}\n              color='#fff'\n            />{' '}\n            SALVAR\n          </button>\n        </aside>\n      </header>\n      <div>\n        <form>\n          <label htmlFor='name'>NOME DO PLANO</label>\n          <input\n            onChange={event =>\n              setPlan({\n                id,\n                title: event.target.value,\n                duration,\n                price,\n              })\n            }\n            value={rest.title}\n            type='text'\n            name='title'\n            id='title'\n          />\n          <div>\n            <div>\n              <label htmlFor='name'>MESES DE DURAÇÃO</label>\n              <input\n                onChange={event =>\n                  setPlan({\n                    id,\n                    title,\n                    duration: event.target.value,\n                    price,\n                  })\n                }\n                value={rest.duration}\n                type='text'\n                name='duration'\n                id='duration'\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>PREÇO MENSAL (R$)</label>\n              <input\n                onChange={event =>\n                  setPlan({\n                    id,\n                    title,\n                    duration,\n                    price: event.target.value,\n                  })\n                }\n                value={rest.price}\n                type='text'\n                name=''\n                id=''\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>PREÇO TOTAL (R$)</label>\n              <input\n                disabled='disabled'\n                value={duration * price}\n                type='text'\n                name=''\n                id=''\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}