{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Matriculations/form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format, parseISO, addMonths } from 'date-fns';\nimport { utcToZonedTime, zonedTimeToUtc } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport { colourOptions } from './data';\nimport api from \"../../services/api\";\nimport { request } from \"../../store/modules/data/actions\";\nimport history from \"../../services/history\";\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        students = _useState2[0],\n        setStudents = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        valor = _useState4[0],\n        setValor = _useState4[1];\n\n  const _useState5 = useState('none'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        toggleDisplay = _useState6[0],\n        setToggleDisplay = _useState6[1];\n\n  const today = format(zonedTimeToUtc(new Date(), 'Europe/London'), 'yyyy-MM-dd', {\n    locale: pt\n  });\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        matriculation = _useState8[0],\n        setMatriculation = _useState8[1];\n\n  const active = matriculation.active,\n        studentId = matriculation.studentId,\n        planId = matriculation.planId,\n        price = matriculation.price,\n        studentName = matriculation.studentName,\n        planTitle = matriculation.planTitle,\n        planDuration = matriculation.planDuration,\n        start_dateFormated = matriculation.start_dateFormated,\n        end_dateFormated = matriculation.end_dateFormated;\n  console.tron.log(matriculation);\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        plans = _useState10[0],\n        setPlans = _useState10[1];\n\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n  useEffect(() => {\n    async function studentsData() {\n      const response = await api.get(`students`);\n      setStudents(response.data);\n    }\n\n    setMatriculation(studentsData);\n\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n\n    setMatriculation(plansData);\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n      const formatStartDate = format(parseISO(response.data.start_date), 'yyyy-MM-dd', {\n        locale: pt\n      });\n      const formatEndDate = format(parseISO(response.data.end_date), 'yyyy-MM-dd', {\n        locale: pt\n      });\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        studentName: response.data.students.name,\n        planId: response.data.plan_id,\n        planDuration: response.data.plans.duration,\n        planTitle: response.data.plans.title,\n        price: response.data.price,\n        start_dateFormated: formatStartDate,\n        end_dateFormated: formatEndDate\n      };\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function formatEndDate(refDate, planDuration) {\n    return format(addMonths(new Date(refDate), planDuration), 'yyyy-MM-dd');\n  }\n\n  function handleEvent(planValue, start_dateFormated) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      studentName,\n      planId: planValue.id,\n      planDuration: planValue.duration,\n      planTitle: planValue.title,\n      price: planValue.price * planValue.duration,\n      start_dateFormated,\n      end_dateFormated: formatEndDate(start_dateFormated, planValue.duration)\n    });\n  }\n\n  function handleSubmit(formData) {\n    const studentId = formData.studentId,\n          planId = formData.planId,\n          start_dateFormated = formData.start_dateFormated;\n    const action = matriculationId ? request('UPDATE', 'matriculations', {\n      id: studentId,\n      rest: {\n        plan_id: planId,\n        start_date: start_dateFormated\n      }\n    }) : request('CREATE', 'matriculations', {\n      student_id: studentId,\n      plan_id: planId,\n      start_date: start_dateFormated\n    });\n    dispatch(action);\n  }\n\n  async function loadStudents(name) {\n    if (name !== '') {\n      setToggleDisplay('block');\n    } else {\n      setToggleDisplay('none');\n    }\n\n    const queryParamsName = name !== undefined ? `?name=${name}` : '';\n    const response = await api.get(`students${queryParamsName}`);\n    setStudents(response.data);\n  }\n\n  function handleKeyPress(key) {\n    console.tron.log(key, typeof key);\n\n    switch (key) {\n      case 40:\n        {\n          document.getElementById('studentsList').focus();\n          break;\n        }\n\n      case 13:\n        {\n          setToggleDisplay('none');\n          break;\n        }\n\n      default:\n    }\n  }\n\n  function setInputValue(value, name) {\n    console.tron.log(name); // document.getElementById('test-target').value = name;\n  }\n\n  function mudarValor(valor) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      planId,\n      planDuration,\n      price,\n      studentName: valor.student_name,\n      planTitle,\n      start_dateFormated: today,\n      end_dateFormated\n    }); // document.getElementById('test-target').value = valor.student_name;\n    // document.getElementById('name').value = valor.student_name;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Cadastro de matr\\xEDcula\"), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"greyButton\",\n    onClick: () => goTo('matriculations'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(MdArrowBack, {\n    size: 16,\n    color: \"#ee4d64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), \" VOLTAR\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSubmit(matriculation),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(MdCheck, {\n    size: 16,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), \" SALVAR\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"NOME DO ALUNO\"), React.createElement(\"input\", {\n    value: studentName,\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"test-target\",\n    id: \"test-target\",\n    onChange: function (event) {\n      setMatriculation({\n        active,\n        matriculationId,\n        studentId,\n        planId,\n        planDuration,\n        price,\n        studentName: event.target.value,\n        planTitle,\n        start_dateFormated: today,\n        end_dateFormated\n      });\n      loadStudents(event.target.value);\n    },\n    onKeyDown: event => handleKeyPress(event.key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    style: {\n      height: 'auto',\n      display: toggleDisplay\n    },\n    id: \"studentsList\",\n    onBlur: () => setToggleDisplay('none'),\n    onChange: event => mudarValor(JSON.parse(event.target.value)),\n    onKeyDown: event => handleKeyPress(event.keyCode),\n    size: students.length < 2 ? '2' : students.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, students.map(student => React.createElement(\"option\", {\n    value: `{\"student_id\":${student.id}, \"student_name\":\"${student.name}\"}`,\n    id: `id_${student.id}`,\n    name: student.name,\n    onClick: () => setToggleDisplay('none'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, student.name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, \"PLANO\"), React.createElement(\"select\", {\n    id: \"planSelect\",\n    name: \"plans\",\n    onChange: event => handleEvent(JSON.parse(event.target.value), start_dateFormated || today),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Selecione\"), plans.map(plan => React.createElement(\"option\", {\n    selected: matriculation.planId === plan.id ? 'selected' : '',\n    value: `{\"id\":${plan.id}, \"title\":\"${plan.title}\", \"price\":${plan.price}, \"duration\":${plan.duration}}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, `${plan.title} (R$${plan.price},00 / ${plan.duration} ${plan.duration > 1 ? 'meses' : 'mês'})`)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, \"DATA DE IN\\xCDCIO\"), React.createElement(\"input\", {\n    type: \"date\",\n    value: start_dateFormated || today,\n    name: \"startDateInput\",\n    onChange: event => setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      planId,\n      planDuration,\n      price,\n      studentName,\n      planTitle,\n      start_dateFormated: event.target.value,\n      end_dateFormated: formatEndDate(event.target.value, planDuration || 1)\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, \"DATA DE T\\xC9RMINO\"), React.createElement(\"input\", {\n    type: \"date\",\n    disabled: true,\n    name: \"\",\n    id: \"\",\n    value: planDuration ? end_dateFormated : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, \"VALOR TOTAL\"), React.createElement(\"input\", {\n    disabled: \"disabled\",\n    value: price || 0,\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Matriculations/form.js"],"names":["React","useState","useEffect","useDispatch","format","parseISO","addMonths","utcToZonedTime","zonedTimeToUtc","pt","MdArrowBack","MdCheck","colourOptions","api","request","history","Dashboard","dispatch","students","setStudents","valor","setValor","toggleDisplay","setToggleDisplay","today","Date","locale","matriculation","setMatriculation","active","studentId","planId","price","studentName","planTitle","planDuration","start_dateFormated","end_dateFormated","console","tron","log","plans","setPlans","params","URL","document","location","searchParams","matriculationId","get","studentsData","response","data","plansData","matriculationData","formatStartDate","start_date","formatEndDate","end_date","id","student_id","name","plan_id","duration","title","goTo","page","push","refDate","handleEvent","planValue","handleSubmit","formData","action","rest","loadStudents","queryParamsName","undefined","handleKeyPress","key","getElementById","focus","setInputValue","value","mudarValor","student_name","event","target","height","display","JSON","parse","keyCode","length","map","student","plan"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { format, parseISO, addMonths } from 'date-fns';\nimport { utcToZonedTime, zonedTimeToUtc } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\n\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport { colourOptions } from './data';\n\nimport api from '~/services/api';\n\nimport { request } from '~/store/modules/data/actions';\n\nimport history from '~/services/history';\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const [students, setStudents] = useState([]);\n  const [valor, setValor] = useState([]);\n  const [toggleDisplay, setToggleDisplay] = useState('none');\n\n  const today = format(\n    zonedTimeToUtc(new Date(), 'Europe/London'),\n    'yyyy-MM-dd',\n    {\n      locale: pt,\n    }\n  );\n\n  const [matriculation, setMatriculation] = useState([]);\n\n  const {\n    active,\n    studentId,\n    planId,\n    price,\n    studentName,\n    planTitle,\n    planDuration,\n    start_dateFormated,\n    end_dateFormated,\n  } = matriculation;\n  console.tron.log(matriculation);\n\n  const [plans, setPlans] = useState([]);\n\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n\n  useEffect(() => {\n    async function studentsData() {\n      const response = await api.get(`students`);\n      setStudents(response.data);\n    }\n    setMatriculation(studentsData);\n\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n    setMatriculation(plansData);\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n\n      const formatStartDate = format(\n        parseISO(response.data.start_date),\n        'yyyy-MM-dd',\n        {\n          locale: pt,\n        }\n      );\n      const formatEndDate = format(\n        parseISO(response.data.end_date),\n        'yyyy-MM-dd',\n        {\n          locale: pt,\n        }\n      );\n\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        studentName: response.data.students.name,\n        planId: response.data.plan_id,\n        planDuration: response.data.plans.duration,\n        planTitle: response.data.plans.title,\n        price: response.data.price,\n        start_dateFormated: formatStartDate,\n        end_dateFormated: formatEndDate,\n      };\n\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function formatEndDate(refDate, planDuration) {\n    return format(addMonths(new Date(refDate), planDuration), 'yyyy-MM-dd');\n  }\n\n  function handleEvent(planValue, start_dateFormated) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      studentName,\n      planId: planValue.id,\n      planDuration: planValue.duration,\n      planTitle: planValue.title,\n      price: planValue.price * planValue.duration,\n      start_dateFormated,\n      end_dateFormated: formatEndDate(start_dateFormated, planValue.duration),\n    });\n  }\n\n  function handleSubmit(formData) {\n    const { studentId, planId, start_dateFormated } = formData;\n    const action = matriculationId\n      ? request('UPDATE', 'matriculations', {\n          id: studentId,\n          rest: { plan_id: planId, start_date: start_dateFormated },\n        })\n      : request('CREATE', 'matriculations', {\n          student_id: studentId,\n          plan_id: planId,\n          start_date: start_dateFormated,\n        });\n    dispatch(action);\n  }\n\n  async function loadStudents(name) {\n    if (name !== '') {\n      setToggleDisplay('block');\n    } else {\n      setToggleDisplay('none');\n    }\n    const queryParamsName = name !== undefined ? `?name=${name}` : '';\n    const response = await api.get(`students${queryParamsName}`);\n\n    setStudents(response.data);\n  }\n\n  function handleKeyPress(key) {\n    console.tron.log(key, typeof key);\n    switch (key) {\n      case 40: {\n        document.getElementById('studentsList').focus();\n        break;\n      }\n      case 13: {\n        setToggleDisplay('none');\n        break;\n      }\n      default:\n    }\n  }\n\n  function setInputValue(value, name) {\n    console.tron.log(name);\n    // document.getElementById('test-target').value = name;\n  }\n\n  function mudarValor(valor) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      planId,\n      planDuration,\n      price,\n      studentName: valor.student_name,\n      planTitle,\n      start_dateFormated: today,\n      end_dateFormated,\n    });\n\n    // document.getElementById('test-target').value = valor.student_name;\n    // document.getElementById('name').value = valor.student_name;\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Cadastro de matrícula</h1>\n        <aside>\n          <button\n            type='button'\n            className='greyButton'\n            onClick={() => goTo('matriculations')}\n          >\n            <MdArrowBack size={16} color='#ee4d64' /> VOLTAR\n          </button>\n          <button type='button' onClick={() => handleSubmit(matriculation)}>\n            <MdCheck size={16} color='#fff' /> SALVAR\n          </button>\n        </aside>\n      </header>\n      <div>\n        <form>\n          <label htmlFor='name'>NOME DO ALUNO</label>\n          <input\n            value={studentName}\n            autoComplete='off'\n            type='text'\n            name='test-target'\n            id='test-target'\n            onChange={function(event) {\n              setMatriculation({\n                active,\n                matriculationId,\n                studentId,\n                planId,\n                planDuration,\n                price,\n                studentName: event.target.value,\n                planTitle,\n                start_dateFormated: today,\n                end_dateFormated,\n              });\n              loadStudents(event.target.value);\n            }}\n            onKeyDown={event => handleKeyPress(event.key)}\n          />\n          <select\n            style={{ height: 'auto', display: toggleDisplay }}\n            id='studentsList'\n            onBlur={() => setToggleDisplay('none')}\n            onChange={event => mudarValor(JSON.parse(event.target.value))}\n            onKeyDown={event => handleKeyPress(event.keyCode)}\n            size={students.length < 2 ? '2' : students.length}\n          >\n            {students.map(student => (\n              <option\n                value={`{\"student_id\":${student.id}, \"student_name\":\"${student.name}\"}`}\n                id={`id_${student.id}`}\n                name={student.name}\n                onClick={() => setToggleDisplay('none')}\n              >\n                {student.name}\n              </option>\n            ))}\n          </select>\n          <div>\n            <div>\n              <label htmlFor='name'>PLANO</label>\n              <select\n                id='planSelect'\n                name='plans'\n                onChange={event =>\n                  handleEvent(\n                    JSON.parse(event.target.value),\n                    start_dateFormated || today\n                  )\n                }\n              >\n                <option>Selecione</option>\n                {plans.map(plan => (\n                  <option\n                    selected={\n                      matriculation.planId === plan.id ? 'selected' : ''\n                    }\n                    value={`{\"id\":${plan.id}, \"title\":\"${plan.title}\", \"price\":${plan.price}, \"duration\":${plan.duration}}`}\n                  >\n                    {`${plan.title} (R$${plan.price},00 / ${plan.duration} ${\n                      plan.duration > 1 ? 'meses' : 'mês'\n                    })`}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE INÍCIO</label>\n              <input\n                type='date'\n                value={start_dateFormated || today}\n                name='startDateInput'\n                onChange={event =>\n                  setMatriculation({\n                    active,\n                    matriculationId,\n                    studentId,\n                    planId,\n                    planDuration,\n                    price,\n                    studentName,\n                    planTitle,\n                    start_dateFormated: event.target.value,\n                    end_dateFormated: formatEndDate(\n                      event.target.value,\n                      planDuration || 1\n                    ),\n                  })\n                }\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE TÉRMINO</label>\n              <input\n                type='date'\n                disabled\n                name=''\n                id=''\n                value={planDuration ? end_dateFormated : ''}\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>VALOR TOTAL</label>\n              <input\n                disabled='disabled'\n                value={price || 0}\n                type='text'\n                name=''\n                id=''\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}