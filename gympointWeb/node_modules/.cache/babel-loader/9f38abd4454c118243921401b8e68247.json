{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/src/pages/Matriculations/form.js\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format, parseISO } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport { request } from \"../../store/modules/data/actions\";\nimport history from \"../../services/history\";\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        matriculation = _useState2[0],\n        setMatriculation = _useState2[1];\n\n  console.tron.log(matriculation);\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n  useEffect(() => {\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        planId: response.data.plan_id,\n        price: response.data.price,\n        studentName: response.data.students.name,\n        planTitle: response.data.plans.title,\n        start_dateFormated: format(parseISO(response.data.start_date), 'dd MMM yyyy', {\n          locale: pt\n        }),\n        end_dateFormated: format(parseISO(response.data.end_date), 'dd MMM yyyy', {\n          locale: pt\n        })\n      };\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function handleSubmit(formData) {\n    const plan_id = formData.plan_id,\n          start_date = formData.start_date,\n          end_date = formData.end_date;\n    const action = matriculationId ? request('UPDATE', 'matriculations', formData) : request('CREATE', 'matriculations', {\n      plan_id,\n      start_date,\n      end_date\n    });\n    dispatch(action);\n  }\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Cadastro de matr\\xEDcula\"), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"greyButton\",\n    onClick: () => goTo('matriculations'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(MdArrowBack, {\n    size: 16,\n    color: \"#ee4d64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \" VOLTAR\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSubmit(matriculation),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(MdCheck, {\n    size: 16,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), \" SALVAR\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"NOME DO ALUNO\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    disabled: matriculationId === '' ? '' : 'disabled',\n    value: matriculation.studentName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"PLANO\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    value: matriculation.planTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"DATA DE IN\\xCDCIO\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    value: matriculation.start_dateFormated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"DATA DE T\\xC9RMINO\"), React.createElement(\"input\", {\n    type: \"text\",\n    disabled: \"disabled\",\n    name: \"\",\n    id: \"\",\n    value: matriculation.end_dateFormated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"VALOR TOTAL\"), React.createElement(\"input\", {\n    disabled: \"disabled\",\n    value: matriculation.price,\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/src/pages/Matriculations/form.js"],"names":["React","useState","useMemo","useEffect","useDispatch","format","parseISO","utcToZonedTime","pt","MdArrowBack","MdCheck","api","request","history","Dashboard","dispatch","matriculation","setMatriculation","console","tron","log","params","URL","document","location","searchParams","matriculationId","get","matriculationData","response","active","data","id","studentId","student_id","planId","plan_id","price","studentName","students","name","planTitle","plans","title","start_dateFormated","start_date","locale","end_dateFormated","end_date","handleSubmit","formData","action","goTo","page","push"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format, parseISO } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from '~/services/api';\n\nimport { request } from '~/store/modules/data/actions';\n\nimport history from '~/services/history';\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const [matriculation, setMatriculation] = useState([]);\n  console.tron.log(matriculation);\n  const params = new URL(document.location).searchParams;\n  const matriculationId = params.get('id') ? params.get('id') : '';\n\n  useEffect(() => {\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${matriculationId}`);\n\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        planId: response.data.plan_id,\n        price: response.data.price,\n        studentName: response.data.students.name,\n        planTitle: response.data.plans.title,\n        start_dateFormated: format(\n          parseISO(response.data.start_date),\n          'dd MMM yyyy',\n          {\n            locale: pt,\n          }\n        ),\n        end_dateFormated: format(\n          parseISO(response.data.end_date),\n          'dd MMM yyyy',\n          {\n            locale: pt,\n          }\n        ),\n      };\n\n      setMatriculation(matriculationData);\n    }\n\n    if (matriculationId !== '') {\n      matriculationData();\n    }\n  }, [matriculationId]);\n\n  function handleSubmit(formData) {\n    const { plan_id, start_date, end_date } = formData;\n    const action = matriculationId\n      ? request('UPDATE', 'matriculations', formData)\n      : request('CREATE', 'matriculations', { plan_id, start_date, end_date });\n    dispatch(action);\n  }\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Cadastro de matrícula</h1>\n        <aside>\n          <button\n            type='button'\n            className='greyButton'\n            onClick={() => goTo('matriculations')}\n          >\n            <MdArrowBack size={16} color='#ee4d64' /> VOLTAR\n          </button>\n          <button type='button' onClick={() => handleSubmit(matriculation)}>\n            <MdCheck size={16} color='#fff' /> SALVAR\n          </button>\n        </aside>\n      </header>\n      <div>\n        <form>\n          <label htmlFor='name'>NOME DO ALUNO</label>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            disabled={matriculationId === '' ? '' : 'disabled'}\n            value={matriculation.studentName}\n          />\n          <div>\n            <div>\n              <label htmlFor='name'>PLANO</label>\n              <input\n                type='text'\n                name=''\n                id=''\n                value={matriculation.planTitle}\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE INÍCIO</label>\n              <input\n                type='text'\n                name=''\n                id=''\n                value={matriculation.start_dateFormated}\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE TÉRMINO</label>\n              <input\n                type='text'\n                disabled='disabled'\n                name=''\n                id=''\n                value={matriculation.end_dateFormated}\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>VALOR TOTAL</label>\n              <input\n                disabled='disabled'\n                value={matriculation.price}\n                type='text'\n                name=''\n                id=''\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}