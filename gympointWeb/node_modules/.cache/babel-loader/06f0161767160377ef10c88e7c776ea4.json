{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/HelpOrders/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format, parseISO } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\nimport api from \"../../services/api\";\nimport { request } from \"../../store/modules/data/actions\";\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        helpOrders = _useState2[0],\n        setHelpOrders = _useState2[1];\n\n  const _useState3 = useState({\n    read: false,\n    mongoID: null,\n    studentName: null,\n    studentQuestion: null,\n    questionDate: format(new Date(), 'yyyy-MM-dd', {\n      locale: pt\n    })\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        student = _useState4[0],\n        setStudent = _useState4[1];\n\n  const read = student.read,\n        mongoID = student.mongoID,\n        studentName = student.studentName,\n        studentQuestion = student.studentQuestion,\n        questionDate = student.questionDate;\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        answer = _useState6[0],\n        setAnswer = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        disabled = _useState8[0],\n        setDisabled = _useState8[1];\n\n  const questionDateFormat = format(parseISO(questionDate), \"dd 'de' MMMM 'de' yyyy\", {\n    locale: pt\n  });\n\n  async function loadHelpOrders() {\n    const response = await api.get('help-orders');\n    setHelpOrders(response.data);\n  }\n\n  useEffect(() => {\n    loadHelpOrders();\n  }, []);\n\n  function displayToggleSwitch(hiding, showing) {\n    const toHide = document.getElementById(hiding);\n    const toShow = document.getElementById(showing);\n    toShow.style.display = 'block';\n    toHide.style.display = 'none';\n    if (!disabled) setDisabled(disabled);\n  }\n\n  function handleSubmit(page, id, formData) {\n    const action = id ? request('UPDATE', page, {\n      id,\n      formData\n    }) : request('CREATE', page, formData);\n    dispatch(action);\n    setDisabled(!disabled);\n    setAnswer('');\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Pedidos de ajuda\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"helpOrderForm\",\n    style: {\n      display: 'none',\n      marginTop: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Em \", questionDateFormat), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, studentName, \" perguntou:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, studentQuestion), React.createElement(\"textarea\", {\n    value: answer,\n    onChange: event => setAnswer(event.target.value),\n    placeholder: \"Resposta da equipe Gympoint...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    disabled: disabled,\n    onClick: () => handleSubmit('help-orders', mongoID, {\n      answer\n    }),\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Enviar a resposta\"), React.createElement(\"button\", {\n    className: \"greyButton\",\n    type: \"button\",\n    onClick: function () {\n      loadHelpOrders();\n      displayToggleSwitch('helpOrderForm', 'helpOrderTable');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Voltar para todos os pedidos\"))), React.createElement(\"table\", {\n    id: \"helpOrderTable\",\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"ALUNO\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, helpOrders.map(helpOrder => React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, helpOrder.student), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function () {\n      displayToggleSwitch('helpOrderTable', 'helpOrderForm');\n      setStudent({\n        read: helpOrder.read,\n        mongoID: helpOrder._id,\n        studentName: helpOrder.student,\n        studentQuestion: helpOrder.question,\n        questionDate: helpOrder.createdAt\n      });\n    },\n    type: \"button\",\n    className: \"blueMinimalButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"responder\"))))))));\n}","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/HelpOrders/index.js"],"names":["React","useState","useEffect","useDispatch","format","parseISO","pt","api","request","Dashboard","dispatch","helpOrders","setHelpOrders","read","mongoID","studentName","studentQuestion","questionDate","Date","locale","student","setStudent","answer","setAnswer","disabled","setDisabled","questionDateFormat","loadHelpOrders","response","get","data","displayToggleSwitch","hiding","showing","toHide","document","getElementById","toShow","style","display","handleSubmit","page","id","formData","action","marginTop","event","target","value","width","map","helpOrder","_id","question","createdAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format, parseISO } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\n\nimport api from '~/services/api';\n\nimport { request } from '~/store/modules/data/actions';\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  const [helpOrders, setHelpOrders] = useState([]);\n  const [student, setStudent] = useState({\n    read: false,\n    mongoID: null,\n    studentName: null,\n    studentQuestion: null,\n    questionDate: format(new Date(), 'yyyy-MM-dd', {\n      locale: pt,\n    }),\n  });\n  const { read, mongoID, studentName, studentQuestion, questionDate } = student;\n  const [answer, setAnswer] = useState('');\n\n  const [disabled, setDisabled] = useState(false);\n\n  const questionDateFormat = format(\n    parseISO(questionDate),\n    \"dd 'de' MMMM 'de' yyyy\",\n    {\n      locale: pt,\n    }\n  );\n\n  async function loadHelpOrders() {\n    const response = await api.get('help-orders');\n    setHelpOrders(response.data);\n  }\n\n  useEffect(() => {\n    loadHelpOrders();\n  }, []);\n\n  function displayToggleSwitch(hiding, showing) {\n    const toHide = document.getElementById(hiding);\n    const toShow = document.getElementById(showing);\n\n    toShow.style.display = 'block';\n    toHide.style.display = 'none';\n\n    if (!disabled) setDisabled(disabled);\n  }\n\n  function handleSubmit(page, id, formData) {\n    const action = id\n      ? request('UPDATE', page, {\n          id,\n          formData,\n        })\n      : request('CREATE', page, formData);\n    dispatch(action);\n\n    setDisabled(!disabled);\n    setAnswer('');\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Pedidos de ajuda</h1>\n      </header>\n      <div>\n        <form id='helpOrderForm' style={{ display: 'none', marginTop: 0 }}>\n          <span>Em {questionDateFormat}</span>\n          <h2>{studentName} perguntou:</h2>\n          <p>{studentQuestion}</p>\n          <textarea\n            value={answer}\n            onChange={event => setAnswer(event.target.value)}\n            placeholder='Resposta da equipe Gympoint...'\n          />\n          <div>\n            <button\n              disabled={disabled}\n              onClick={() => handleSubmit('help-orders', mongoID, { answer })}\n              type='button'\n            >\n              Enviar a resposta\n            </button>\n            <button\n              className='greyButton'\n              type='button'\n              onClick={function() {\n                loadHelpOrders();\n                displayToggleSwitch('helpOrderForm', 'helpOrderTable');\n              }}\n            >\n              Voltar para todos os pedidos\n            </button>\n          </div>\n        </form>\n        <table id='helpOrderTable' style={{ width: '100%' }}>\n          <thead>\n            <td>ALUNO</td>\n            <td />\n          </thead>\n          <tbody>\n            {helpOrders.map(helpOrder => (\n              <tr>\n                <td style={{ width: '100%' }}>{helpOrder.student}</td>\n                <td>\n                  <button\n                    onClick={function() {\n                      displayToggleSwitch('helpOrderTable', 'helpOrderForm');\n                      setStudent({\n                        read: helpOrder.read,\n                        mongoID: helpOrder._id,\n                        studentName: helpOrder.student,\n                        studentQuestion: helpOrder.question,\n                        questionDate: helpOrder.createdAt,\n                      });\n                    }}\n                    type='button'\n                    className='blueMinimalButton'\n                  >\n                    responder\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}