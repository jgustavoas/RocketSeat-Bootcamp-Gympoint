{"ast":null,"code":"import _slicedToArray from \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Matriculations/form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format, parseISO, addMonths } from 'date-fns';\nimport { zonedTimeToUtc } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport { request } from \"../../store/modules/data/actions\";\nimport history from \"../../services/history\";\nexport default function Form() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        students = _useState2[0],\n        setStudents = _useState2[1];\n\n  const _useState3 = useState('none'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        toggleDisplay = _useState4[0],\n        setToggleDisplay = _useState4[1];\n\n  const today = format(zonedTimeToUtc(new Date(), 'Europe/London'), 'yyyy-MM-dd', {\n    locale: pt\n  });\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        matriculation = _useState6[0],\n        setMatriculation = _useState6[1];\n\n  const matriculationId = matriculation.matriculationId,\n        active = matriculation.active,\n        studentId = matriculation.studentId,\n        planId = matriculation.planId,\n        price = matriculation.price,\n        studentName = matriculation.studentName,\n        planTitle = matriculation.planTitle,\n        planDuration = matriculation.planDuration,\n        start_dateFormated = matriculation.start_dateFormated,\n        end_dateFormated = matriculation.end_dateFormated;\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        plans = _useState8[0],\n        setPlans = _useState8[1];\n\n  const params = new URL(document.location).searchParams;\n  const getMatriculationId = params.get('id') ? params.get('id') : matriculationId;\n  useEffect(() => {\n    async function studentsData() {\n      const response = await api.get(`students`);\n      setStudents(response.data);\n    }\n\n    setMatriculation(studentsData);\n\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n\n    setMatriculation(plansData);\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${getMatriculationId}`);\n      const formatStartDate = format(parseISO(response.data.start_date), 'yyyy-MM-dd', {\n        locale: pt\n      });\n      const formatEndDate = format(parseISO(response.data.end_date), 'yyyy-MM-dd', {\n        locale: pt\n      });\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        studentName: response.data.students.name,\n        planId: response.data.plan_id,\n        planDuration: response.data.plans.duration,\n        planTitle: response.data.plans.title,\n        price: response.data.price,\n        start_dateFormated: formatStartDate,\n        end_dateFormated: formatEndDate\n      };\n      setMatriculation(matriculationData);\n    }\n\n    if (getMatriculationId !== '') {\n      matriculationData();\n    }\n  }, [getMatriculationId]);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function formatEndDate(refDate, planDuration) {\n    return format(addMonths(new Date(refDate), planDuration), 'yyyy-MM-dd');\n  }\n\n  function handleEvent(planValue, start_dateFormated) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      studentName,\n      planId: planValue.id,\n      planDuration: planValue.duration,\n      planTitle: planValue.title,\n      price: planValue.price * planValue.duration,\n      start_dateFormated,\n      end_dateFormated: formatEndDate(start_dateFormated, planValue.duration)\n    });\n  }\n\n  async function loadStudents(name) {\n    const queryParamsName = name !== undefined ? `?name=${name}` : '';\n    const response = await api.get(`students${queryParamsName}`);\n    setStudents(response.data);\n\n    if (response.data.length === 0) {\n      setToggleDisplay('none');\n    }\n  }\n\n  function mudarValor(valor) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId: valor.student_id,\n      studentName: valor.student_name,\n      planId: matriculation.planId,\n      planDuration,\n      price,\n      planTitle,\n      start_dateFormated: matriculation.start_dateFormated || today,\n      end_dateFormated\n    });\n  }\n\n  function handleKeyPress(key, inputType) {\n    const alfabet = /^[a-zA-Z]$/;\n    const specialKeys = ['Enter', 'Backspace', ' '];\n\n    if (key === 'ArrowDown') {\n      document.getElementById('studentsList').focus();\n\n      if (inputType === 'text') {\n        document.getElementById('studentsList').selectedIndex = '0';\n        const primeiroItem = document.getElementById('studentsList').options[0];\n\n        if (primeiroItem) {\n          const valorDoPrimeiroItem = primeiroItem.value;\n          mudarValor(JSON.parse(valorDoPrimeiroItem));\n        }\n      }\n    }\n\n    if (inputType === 'select') {\n      if (specialKeys.includes(key) || key.match(alfabet) !== null) {\n        setToggleDisplay('none');\n        document.getElementById('studentNameInput').focus();\n      }\n    }\n  }\n\n  function handleSubmit(page, id, formData) {\n    const action = id ? request('UPDATE', page, {\n      id,\n      formData\n    }) : request('CREATE', page, formData);\n    dispatch(action);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Cadastro de matr\\xEDcula\"), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"greyButton\",\n    onClick: () => goTo('matriculations'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(MdArrowBack, {\n    size: 16,\n    color: \"#ee4d64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), \" VOLTAR\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSubmit('matriculations', matriculationId, {\n      student_id: studentId,\n      plan_id: planId,\n      start_date: `${start_dateFormated}T03:00:01.000Z`\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(MdCheck, {\n    size: 16,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), \" SALVAR\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"NOME DO ALUNO\"), React.createElement(\"input\", {\n    value: studentName,\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"studentNameInput\",\n    id: \"studentNameInput\",\n    onChange: function (event) {\n      setMatriculation({\n        active,\n        matriculationId,\n        studentId,\n        planId,\n        planDuration,\n        price,\n        studentName: event.target.value,\n        planTitle,\n        start_dateFormated: matriculation.start_dateFormated || today,\n        end_dateFormated\n      });\n      loadStudents(event.target.value);\n    },\n    onKeyDown: event => handleKeyPress(event.key, 'text'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    style: {\n      height: 'auto',\n      display: toggleDisplay\n    },\n    id: \"studentsList\",\n    onBlur: () => setToggleDisplay('none'),\n    onChange: event => mudarValor(JSON.parse(event.target.value)),\n    onKeyDown: event => handleKeyPress(event.key, 'select'),\n    size: students.length < 2 ? '2' : students.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, students.map(student => React.createElement(\"option\", {\n    value: `{\"student_id\":${student.id}, \"student_name\":\"${student.name}\"}`,\n    id: `id_${student.id}`,\n    name: student.name,\n    onClick: () => setToggleDisplay('none'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, student.name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \"PLANO\"), React.createElement(\"select\", {\n    id: \"planSelect\",\n    name: \"plans\",\n    onChange: event => handleEvent(JSON.parse(event.target.value), start_dateFormated || today),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"Selecione\"), plans.map(plan => React.createElement(\"option\", {\n    selected: matriculation.planId === plan.id ? 'selected' : '',\n    value: `{\"id\":${plan.id}, \"title\":\"${plan.title}\", \"price\":${plan.price}, \"duration\":${plan.duration}}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, `${plan.title} (R$${plan.price},00 / ${plan.duration} ${plan.duration > 1 ? 'meses' : 'mês'})`)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \"DATA DE IN\\xCDCIO\"), React.createElement(\"input\", {\n    type: \"date\",\n    value: start_dateFormated || today,\n    name: \"startDateInput\",\n    onChange: event => setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      planId,\n      planDuration,\n      price,\n      studentName,\n      planTitle,\n      start_dateFormated: event.target.value,\n      end_dateFormated: formatEndDate(event.target.value, planDuration || 1)\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, \"DATA DE T\\xC9RMINO\"), React.createElement(\"input\", {\n    type: \"date\",\n    disabled: true,\n    name: \"\",\n    id: \"\",\n    value: planDuration ? end_dateFormated : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \"VALOR TOTAL\"), React.createElement(\"input\", {\n    disabled: \"disabled\",\n    value: price || 0,\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Gympoint/gympointWeb/src/pages/Matriculations/form.js"],"names":["React","useState","useEffect","useDispatch","format","parseISO","addMonths","zonedTimeToUtc","pt","MdArrowBack","MdCheck","api","request","history","Form","dispatch","students","setStudents","toggleDisplay","setToggleDisplay","today","Date","locale","matriculation","setMatriculation","matriculationId","active","studentId","planId","price","studentName","planTitle","planDuration","start_dateFormated","end_dateFormated","plans","setPlans","params","URL","document","location","searchParams","getMatriculationId","get","studentsData","response","data","plansData","matriculationData","formatStartDate","start_date","formatEndDate","end_date","id","student_id","name","plan_id","duration","title","goTo","page","push","refDate","handleEvent","planValue","loadStudents","queryParamsName","undefined","length","mudarValor","valor","student_name","handleKeyPress","key","inputType","alfabet","specialKeys","getElementById","focus","selectedIndex","primeiroItem","options","valorDoPrimeiroItem","value","JSON","parse","includes","match","handleSubmit","formData","action","event","target","height","display","map","student","plan"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { format, parseISO, addMonths } from 'date-fns';\nimport { zonedTimeToUtc } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\n\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\n\nimport api from '~/services/api';\n\nimport { request } from '~/store/modules/data/actions';\n\nimport history from '~/services/history';\n\nexport default function Form() {\n  const dispatch = useDispatch();\n\n  const [students, setStudents] = useState([]);\n  const [toggleDisplay, setToggleDisplay] = useState('none');\n\n  const today = format(\n    zonedTimeToUtc(new Date(), 'Europe/London'),\n    'yyyy-MM-dd',\n    {\n      locale: pt,\n    }\n  );\n\n  const [matriculation, setMatriculation] = useState([]);\n\n  const {\n    matriculationId,\n    active,\n    studentId,\n    planId,\n    price,\n    studentName,\n    planTitle,\n    planDuration,\n    start_dateFormated,\n    end_dateFormated,\n  } = matriculation;\n\n  const [plans, setPlans] = useState([]);\n\n  const params = new URL(document.location).searchParams;\n  const getMatriculationId = params.get('id')\n    ? params.get('id')\n    : matriculationId;\n\n  useEffect(() => {\n    async function studentsData() {\n      const response = await api.get(`students`);\n      setStudents(response.data);\n    }\n    setMatriculation(studentsData);\n\n    async function plansData() {\n      const response = await api.get(`plans`);\n      setPlans(response.data);\n    }\n    setMatriculation(plansData);\n\n    async function matriculationData() {\n      const response = await api.get(`matriculations/${getMatriculationId}`);\n\n      const formatStartDate = format(\n        parseISO(response.data.start_date),\n        'yyyy-MM-dd',\n        {\n          locale: pt,\n        }\n      );\n      const formatEndDate = format(\n        parseISO(response.data.end_date),\n        'yyyy-MM-dd',\n        {\n          locale: pt,\n        }\n      );\n\n      const matriculationData = {\n        active: response.data.active,\n        matriculationId: response.data.id,\n        studentId: response.data.student_id,\n        studentName: response.data.students.name,\n        planId: response.data.plan_id,\n        planDuration: response.data.plans.duration,\n        planTitle: response.data.plans.title,\n        price: response.data.price,\n        start_dateFormated: formatStartDate,\n        end_dateFormated: formatEndDate,\n      };\n\n      setMatriculation(matriculationData);\n    }\n\n    if (getMatriculationId !== '') {\n      matriculationData();\n    }\n  }, [getMatriculationId]);\n\n  function goTo(page) {\n    history.push(`/${page}`);\n  }\n\n  function formatEndDate(refDate, planDuration) {\n    return format(addMonths(new Date(refDate), planDuration), 'yyyy-MM-dd');\n  }\n\n  function handleEvent(planValue, start_dateFormated) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId,\n      studentName,\n      planId: planValue.id,\n      planDuration: planValue.duration,\n      planTitle: planValue.title,\n      price: planValue.price * planValue.duration,\n      start_dateFormated,\n      end_dateFormated: formatEndDate(start_dateFormated, planValue.duration),\n    });\n  }\n\n  async function loadStudents(name) {\n    const queryParamsName = name !== undefined ? `?name=${name}` : '';\n    const response = await api.get(`students${queryParamsName}`);\n\n    setStudents(response.data);\n    if (response.data.length === 0) {\n      setToggleDisplay('none');\n    }\n  }\n\n  function mudarValor(valor) {\n    setMatriculation({\n      active,\n      matriculationId,\n      studentId: valor.student_id,\n      studentName: valor.student_name,\n      planId: matriculation.planId,\n      planDuration,\n      price,\n      planTitle,\n      start_dateFormated: matriculation.start_dateFormated || today,\n      end_dateFormated,\n    });\n  }\n\n  function handleKeyPress(key, inputType) {\n    const alfabet = /^[a-zA-Z]$/;\n    const specialKeys = ['Enter', 'Backspace', ' '];\n\n    if (key === 'ArrowDown') {\n      document.getElementById('studentsList').focus();\n\n      if (inputType === 'text') {\n        document.getElementById('studentsList').selectedIndex = '0';\n        const primeiroItem = document.getElementById('studentsList').options[0];\n        if (primeiroItem) {\n          const valorDoPrimeiroItem = primeiroItem.value;\n          mudarValor(JSON.parse(valorDoPrimeiroItem));\n        }\n      }\n    }\n\n    if (inputType === 'select') {\n      if (specialKeys.includes(key) || key.match(alfabet) !== null) {\n        setToggleDisplay('none');\n        document.getElementById('studentNameInput').focus();\n      }\n    }\n  }\n\n  function handleSubmit(page, id, formData) {\n    const action = id\n      ? request('UPDATE', page, {\n          id,\n          formData,\n        })\n      : request('CREATE', page, formData);\n    dispatch(action);\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Cadastro de matrícula</h1>\n        <aside>\n          <button\n            type='button'\n            className='greyButton'\n            onClick={() => goTo('matriculations')}\n          >\n            <MdArrowBack size={16} color='#ee4d64' /> VOLTAR\n          </button>\n          <button\n            type='button'\n            onClick={() =>\n              handleSubmit('matriculations', matriculationId, {\n                student_id: studentId,\n                plan_id: planId,\n                start_date: `${start_dateFormated}T03:00:01.000Z`,\n              })\n            }\n          >\n            <MdCheck size={16} color='#fff' /> SALVAR\n          </button>\n        </aside>\n      </header>\n      <div>\n        <form>\n          <label htmlFor='name'>NOME DO ALUNO</label>\n          <input\n            value={studentName}\n            autoComplete='off'\n            type='text'\n            name='studentNameInput'\n            id='studentNameInput'\n            onChange={function(event) {\n              setMatriculation({\n                active,\n                matriculationId,\n                studentId,\n                planId,\n                planDuration,\n                price,\n                studentName: event.target.value,\n                planTitle,\n                start_dateFormated: matriculation.start_dateFormated || today,\n                end_dateFormated,\n              });\n              loadStudents(event.target.value);\n            }}\n            onKeyDown={event => handleKeyPress(event.key, 'text')}\n          />\n          <select\n            style={{ height: 'auto', display: toggleDisplay }}\n            id='studentsList'\n            onBlur={() => setToggleDisplay('none')}\n            onChange={event => mudarValor(JSON.parse(event.target.value))}\n            onKeyDown={event => handleKeyPress(event.key, 'select')}\n            size={students.length < 2 ? '2' : students.length}\n          >\n            {students.map(student => (\n              <option\n                value={`{\"student_id\":${student.id}, \"student_name\":\"${student.name}\"}`}\n                id={`id_${student.id}`}\n                name={student.name}\n                onClick={() => setToggleDisplay('none')}\n              >\n                {student.name}\n              </option>\n            ))}\n          </select>\n          <div>\n            <div>\n              <label htmlFor='name'>PLANO</label>\n              <select\n                id='planSelect'\n                name='plans'\n                onChange={event =>\n                  handleEvent(\n                    JSON.parse(event.target.value),\n                    start_dateFormated || today\n                  )\n                }\n              >\n                <option>Selecione</option>\n                {plans.map(plan => (\n                  <option\n                    selected={\n                      matriculation.planId === plan.id ? 'selected' : ''\n                    }\n                    value={`{\"id\":${plan.id}, \"title\":\"${plan.title}\", \"price\":${plan.price}, \"duration\":${plan.duration}}`}\n                  >\n                    {`${plan.title} (R$${plan.price},00 / ${plan.duration} ${\n                      plan.duration > 1 ? 'meses' : 'mês'\n                    })`}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE INÍCIO</label>\n              <input\n                type='date'\n                value={start_dateFormated || today}\n                name='startDateInput'\n                onChange={event =>\n                  setMatriculation({\n                    active,\n                    matriculationId,\n                    studentId,\n                    planId,\n                    planDuration,\n                    price,\n                    studentName,\n                    planTitle,\n                    start_dateFormated: event.target.value,\n                    end_dateFormated: formatEndDate(\n                      event.target.value,\n                      planDuration || 1\n                    ),\n                  })\n                }\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>DATA DE TÉRMINO</label>\n              <input\n                type='date'\n                disabled\n                name=''\n                id=''\n                value={planDuration ? end_dateFormated : ''}\n              />\n            </div>\n            <div>\n              <label htmlFor='name'>VALOR TOTAL</label>\n              <input\n                disabled='disabled'\n                value={price || 0}\n                type='text'\n                name=''\n                id=''\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}