{"ast":null,"code":"import _objectWithoutProperties from \"/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from \"../../../services/api\";\nimport { newStudentFailure, updateStudentFailure } from './actions';\nexport function* updateStudent({\n  payload\n}) {\n  try {\n    const _payload$data = payload.data,\n          id = _payload$data.id,\n          rest = _objectWithoutProperties(_payload$data, [\"id\"]);\n\n    yield call(api.put, `/students/${id}`, rest);\n    toast.success('Cadastro do aluno atualizado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao inserir dados!');\n    yield put(updateStudentFailure());\n  }\n}\nexport function* newStudent({\n  payload\n}) {\n  try {\n    const _payload$data2 = payload.data,\n          name = _payload$data2.name,\n          email = _payload$data2.email,\n          age = _payload$data2.age,\n          weight = _payload$data2.weight,\n          height = _payload$data2.height;\n    yield call(api.post, `students`, {\n      name,\n      email,\n      age,\n      weight,\n      height\n    });\n    toast.success('Aluno cadastrado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao atualizar dados!');\n    yield put(newStudentFailure());\n  }\n}\nexport function* deleteStudent({\n  payload\n}) {\n  try {\n    const data = payload.data;\n    yield call(api.delete, `students`, {\n      data: {\n        id: data\n      }\n    });\n    toast.success('Cadastro do aluno deletado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao deletar cadastro!');\n  }\n}\nexport default all([takeLatest('@student/UPDATE_STUDENT_REQUEST', updateStudent), takeLatest('@student/NEW_STUDENT_REQUEST', newStudent), takeLatest('@student/DELETE_STUDENT_REQUEST', deleteStudent)]);","map":{"version":3,"sources":["/home/gustavo/Rocketseat/Bootcamp/Desafios/gympointWeb/src/store/modules/student/sagas.js"],"names":["takeLatest","call","put","all","toast","api","newStudentFailure","updateStudentFailure","updateStudent","payload","data","id","rest","success","err","error","newStudent","name","email","age","weight","height","post","deleteStudent","delete"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,WAAxD;AAEA,OAAO,UAAUC,aAAV,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AAC1C,MAAI;AAAA,0BACsBA,OAAO,CAACC,IAD9B;AAAA,UACMC,EADN,iBACMA,EADN;AAAA,UACaC,IADb;;AAGF,UAAMX,IAAI,CAACI,GAAG,CAACH,GAAL,EAAW,aAAYS,EAAG,EAA1B,EAA6BC,IAA7B,CAAV;AAEAR,IAAAA,KAAK,CAACS,OAAN,CAAc,2CAAd;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZV,IAAAA,KAAK,CAACW,KAAN,CAAY,wBAAZ;AACA,UAAMb,GAAG,CAACK,oBAAoB,EAArB,CAAT;AACD;AACF;AAED,OAAO,UAAUS,UAAV,CAAqB;AAAEP,EAAAA;AAAF,CAArB,EAAkC;AACvC,MAAI;AAAA,2BAC2CA,OAAO,CAACC,IADnD;AAAA,UACMO,IADN,kBACMA,IADN;AAAA,UACYC,KADZ,kBACYA,KADZ;AAAA,UACmBC,GADnB,kBACmBA,GADnB;AAAA,UACwBC,MADxB,kBACwBA,MADxB;AAAA,UACgCC,MADhC,kBACgCA,MADhC;AAEF,UAAMpB,IAAI,CAACI,GAAG,CAACiB,IAAL,EAAY,UAAZ,EAAuB;AAAEL,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,GAAf;AAAoBC,MAAAA,MAApB;AAA4BC,MAAAA;AAA5B,KAAvB,CAAV;AAEAjB,IAAAA,KAAK,CAACS,OAAN,CAAc,+BAAd;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZV,IAAAA,KAAK,CAACW,KAAN,CAAY,0BAAZ;AACA,UAAMb,GAAG,CAACI,iBAAiB,EAAlB,CAAT;AACD;AACF;AAED,OAAO,UAAUiB,aAAV,CAAwB;AAAEd,EAAAA;AAAF,CAAxB,EAAqC;AAC1C,MAAI;AAAA,UACMC,IADN,GACeD,OADf,CACMC,IADN;AAEF,UAAMT,IAAI,CAACI,GAAG,CAACmB,MAAL,EAAc,UAAd,EAAyB;AAAEd,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAED;AAAN;AAAR,KAAzB,CAAV;AAEAN,IAAAA,KAAK,CAACS,OAAN,CAAc,yCAAd;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZV,IAAAA,KAAK,CAACW,KAAN,CAAY,2BAAZ;AACD;AACF;AAED,eAAeZ,GAAG,CAAC,CACjBH,UAAU,CAAC,iCAAD,EAAoCQ,aAApC,CADO,EAEjBR,UAAU,CAAC,8BAAD,EAAiCgB,UAAjC,CAFO,EAGjBhB,UAAU,CAAC,iCAAD,EAAoCuB,aAApC,CAHO,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '~/services/api';\n\nimport { newStudentFailure, updateStudentFailure } from './actions';\n\nexport function* updateStudent({ payload }) {\n  try {\n    const { id, ...rest } = payload.data;\n\n    yield call(api.put, `/students/${id}`, rest);\n\n    toast.success('Cadastro do aluno atualizado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao inserir dados!');\n    yield put(updateStudentFailure());\n  }\n}\n\nexport function* newStudent({ payload }) {\n  try {\n    const { name, email, age, weight, height } = payload.data;\n    yield call(api.post, `students`, { name, email, age, weight, height });\n\n    toast.success('Aluno cadastrado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao atualizar dados!');\n    yield put(newStudentFailure());\n  }\n}\n\nexport function* deleteStudent({ payload }) {\n  try {\n    const { data } = payload;\n    yield call(api.delete, `students`, { data: { id: data } });\n\n    toast.success('Cadastro do aluno deletado com sucesso!');\n  } catch (err) {\n    toast.error('Erro ao deletar cadastro!');\n  }\n}\n\nexport default all([\n  takeLatest('@student/UPDATE_STUDENT_REQUEST', updateStudent),\n  takeLatest('@student/NEW_STUDENT_REQUEST', newStudent),\n  takeLatest('@student/DELETE_STUDENT_REQUEST', deleteStudent),\n]);\n"]},"metadata":{},"sourceType":"module"}